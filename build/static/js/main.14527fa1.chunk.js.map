{"version":3,"sources":["Constants.js","redux/actions/postAction.js","app/components/AppFooter.js","redux/actions/authAction.js","app/cards/HomeCardOne.js","app/cards/HomeCardThree.js","app/cards/HomeCardTwo.js","app/components/video/Video.js","app/Home.js","app/pages/Admin.js","app/cards/AllSitePostsDisplayCard.js","app/components/AreYouSureModal.js","app/cards/EditPostCard.js","app/cards/PostDisplayCard.js","app/pages/AllSitePostsPage.js","app/cards/PostCreateCard.js","app/components/PostImageForm.js","app/components/CardInput.js","app/pages/PayPage.js","app/cards/CreatePostDisplayCard.js","app/pages/PostCreation/PostStepThree.js","app/pages/PostCreation/PostStepTwo.js","app/pages/PostCreation/PostStepOne.js","app/pages/UsersPostsPage.js","app/pages/DashboardPage.js","app/pages/FreeRegistrationPage.js","app/pages/LoginPage.js","app/components/ImageForm.js","app/cards/ProfileCard.js","app/pages/ProfilePage.js","app/NavigationMenu.js","redux/reducers/authReducer.js","redux/reducers/postReducer.js","redux/actions/statusAction.js","redux/reducers/statusReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["console","log","process","config","url","API_URL","IMG_URL","ALL_USER_POSTS_SUCCESS","ALL_USER_POSTS_FAIL","ALL_SITE_POSTS_SUCCESS","ALL_SITE_POSTS_FAIL","UPDATE_POST_SUCCESS","UPDATE_POST_FAIL","FILTER_POSTS_SUCCESS","FILTER_POSTS_FAIL","CREATE_POST_SUCCESS","CREATE_POST_FAIL","FILTER_OWNERS_POSTS_SUCCESS","FILTER_OWNERS_POSTS_FAIL","ACCEPT_POST_SUCCESS","ACCEPT_POST_FAIL","CANCEL_POST_SUCCESS","CANCEL_POST_FAIL","INIT_POST_SUCCESS","INIT_POST_FAIL","CLEAR_POST_SUCCESS","CLEAR_POST_FAIL","SET_STATUS_GREEN","SET_STATUS_BLUE","GET_STATUS_COLOR","DELETE_POST_SUCCESS","DELETE_POST_FAIL","UPDATE_CREATING_POST_SUCCESS","UPDATE_CREATING_POST_FAIL","PROXIMITY_POSTS_SUCCESS","PROXIMITY_POSTS_FAIL","allSitePosts","dispatch","a","fetch","method","headers","result","json","resultData","type","payload","allUserPosts","key","body","JSON","stringify","success","acceptPost","cancelPost","clearPost","updateCreatingPost","postData","id","userId","title","description","category","postType","email","phone","address","city","state","zip","website","postImage","activated","setStatusGreen","setStatusBlue","getStatusColor","AppFooter","useDispatch","Kolor","useSelector","post","statusColor","useEffect","postAction","then","catch","err","style","position","bottom","left","background","opacity","width","height","color","fontSize","fontWeight","fontStyle","href","textDecoration","cursor","target","Icon","className","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGOUT_USER_SUCCESS","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","FILTER_USERS_SUCCESS","FILTER_USERS_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","userProfile","localStorage","getItem","updateUser","authData","fullName","profileImage","getCategories","calc","x","y","window","innerHeight","innerWidth","trans","s","HomeCardOne","useSpring","xys","mass","tension","friction","props","set","div","onMouseMove","clientX","clientY","onMouseLeave","transform","interpolate","padding","Typography","variant","component","HomeCardThree","HomeCardTwo","Video","this","controls","Component","Home","Fragment","Grid","container","pages","top","offset","speed","display","justifyContent","alignItems","item","xs","sm","spacing","justify","direction","backgroundRepeat","paddingTop","marginTop","boxShadow","marginBottom","textShadow","backgroundColor","Card","paddingBottom","AdminPage","useState","homeScore","setHomeScore","visitorScore","setVisitorScore","inning","setInning","outs","setOuts","balls","setBalls","walks","setWalks","strikes","setStrikes","switchAtBat","align","onClick","alert","map","p","i","AllSitePostsDisplayCard","loading","us_states","auth","usstates","categories","authorized","user","currentCategory","setCurrentCategory","seeDetails","setSeeDetails","inProgress","setInProgress","parseInt","textAlign","src","alt","isoStringDate","sp","currentDate","Date","dd","getDate","mm","getMonth","getFullYear","formatIsoStringDate","dateCreated","size","rand","Math","round","random","getModalStyle","useStyles","makeStyles","theme","paper","palette","border","shadows","AreYouSureModal","classes","React","modalStyle","open","setOpen","data","deleteItem","Modal","onClose","aria-labelledby","aria-describedby","formSchema","yup","required","min","EditPostCard","currentPost","setCategories","haveCategories","authAction","results","error","post_categories","_id","res","initialValues","validationSchema","onSubmit","values","closeEdit","refresh","placeholder","onChange","handleChange","value","onBlur","handleBlur","touched","errors","outline","minWidth","index","disabled","handleSubmit","marginRight","PostDisplayCard","allowEdit","setAllowEdit","AllSitePostsPage","setLoading","zipWithinRadius","miles","setCurrentPosts","setHaveCurrentPosts","scrollTo","currentPosts","haveCurrentPosts","show","setShow","setMiles","zipcode","setZipcode","sortName","setSortName","sortLatest","setSortLatest","sortPostType1","setSortPostType1","sortPostType2","setSortPostType2","sortCategory","setSortCategory","setSortId","noSort","setNoSort","setFilterKey","searchInputEl","useRef","milesInput","zipInput","getDefaultPosts","getFilteredPosts","setSortOption","e","resetAll","current","focus","resetProximity","right","zIndex","name","htmlFor","ref","preventDefault","sort","b","lastUpdated","displayPosts","max","PostCreateCard","setSumbitComplete","setCurrentPost","sortedResults","post_types","postStepOne","PostImageForm","fileSize","setFileSize","file","setFile","submitWithNoImage","event","FormData","append","length","axios","encType","accept","multiple","files","file_size","CARD_ELEMENT_OPTIONS","base","invalid","iconColor","CardInput","options","root","maxWidth","margin","content","flexDirection","alignContent","button","password","PayPage","setEmail","paid","setPaid","stripe","useStripe","elements","useElements","handleSubmitPay","clientSecret","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","message","paymentIntent","status","path","CardContent","TextField","label","helperText","fullWidth","Button","stripePromise","loadStripe","CreatePostDisplayCard","readyToComplete","beginPay","setBeginPay","postStepThree","prop","PostStepThree","styled","section","LinkStyle","PostStepTwo","postStepTwo","to","PostStepOne","postStepZero","UsersPostsPage","setUser","postStepsAvailable","sortEmail","sortId","refreshUserPosts","DashboardPage","haveUser","borderRadius","sms_secret","ButtonComponent","CircularProgress","FreeRegistrationPage","history","closeRegistration","setItem","token","setTimeout","push","LoginPage","Paper","borderBottom","ImageForm","close","ProfileCard","created","ProfilePage","NavigationMenu","admin","setAdmin","hideRegister","setHideRegister","anchorEl","setAnchorEl","handleClose","Toolbar","IconButton","edge","aria-controls","aria-haspopup","aria-label","currentTarget","Menu","keepMounted","Boolean","MenuItem","removeItem","exact","initialState","haveUsers","loginResult","loginSuccess","users","havePosts","posts","usersPosts","haveUsersPosts","rootReducer","combineReducers","action","middleware","composeWithDevTools","applyMiddleware","thunk","createStore","App","store","CssBaseline","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14527fa1.chunk.js","sourcesContent":["// Constants.js\nconst prod = {\n  url: {\n    API_URL: \"https://servewerx.com/api\",\n    IMG_URL:\"https://servewerx-space-1.nyc3.digitaloceanspaces.com\"\n  },\n};\nconst dev = {\n  url: {\n    API_URL: \"http://localhost:4000\",\n    IMG_URL: \"https://servewerx-space-1.nyc3.digitaloceanspaces.com\"\n  },\n};\nconsole.log('process.env:',process.env);\nexport const config = process.env.NODE_ENV === \"development\" ? dev : prod;\n\n\n\n/*\n\n    API_URL: \"http://localhost:4000/api\",\n    IMG_URL: \"http://localhost:4000\"\n*/\n/*\n API_URL: \"https://arcane-eyrie-05882.herokuapp.com/api\",\n    IMG_URL:\"https://arcane-eyrie-05882.herokuapp.com\"\n\n*/\n","import { config } from \"../../Constants\";\n\nexport const ALL_USER_POSTS_SUCCESS = \"ALL_USER_POSTS_SUCCESS\";\nexport const ALL_USER_POSTS_FAIL = \"ALL_USER_POSTS_FAIL\";\n\nexport const ALL_SITE_POSTS_SUCCESS = \"ALL_SITE_POSTS_SUCCESS\";\nexport const ALL_SITE_POSTS_FAIL = \"ALL_SITE_POSTS_FAIL\";\n\nexport const POST_GET_SUCCESS = \"POST_GET_SUCCESS\";\nexport const POST_GET_FAIL = \"POST_GET_FAIL\";\n\nexport const UPDATE_POST_SUCCESS = \"UPDATE_POST_SUCCESS\";\nexport const UPDATE_POST_FAIL = \"UPDATE_POST_FAIL\";\n\nexport const FILTER_POSTS_SUCCESS = \"FILTER_POSTS_SUCCESS\";\nexport const FILTER_POSTS_FAIL = \"FILTER_POSTS_FAIL\";\n\nexport const CREATE_POST_SUCCESS = \"CREATE_POST_SUCCESS\";\nexport const CREATE_POST_FAIL = \"CREATE_POST_FAIL\";\n\nexport const FILTER_OWNERS_POSTS_SUCCESS = \"FILTER_OWNERS_POSTS_SUCCESS\";\nexport const FILTER_OWNERS_POSTS_FAIL = \"FILTER_OWNERS_POSTS_FAIL\";\n\n\nexport const ACCEPT_POST_SUCCESS = \"ACCEPT_POST_SUCCESS\";\nexport const ACCEPT_POST_FAIL = \"ACCEPT_POST_FAIL\";\n\nexport const CANCEL_POST_SUCCESS = \"CANCEL_POST_SUCCESS\";\nexport const CANCEL_POST_FAIL = \"CANCEL_POST_FAIL\";\n\nexport const INIT_POST_SUCCESS = \"INIT_POST_SUCCESS\";\nexport const INIT_POST_FAIL = \"INIT_POST_FAIL\";\n\nexport const CLEAR_POST_SUCCESS = \"CLEAR_POST_SUCCESS\";\nexport const CLEAR_POST_FAIL = \"CLEAR_POST_FAIL\";\n\nconst API_URL = config.url.API_URL;\n\nexport const SET_STATUS_GREEN = \"SET_STATUS_GREEN\";\nexport const SET_STATUS_BLUE = \"SET_STATUS_BLUE\";\nexport const GET_STATUS_COLOR = \"GET_STATUS_COLOR\";\n\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\";\nexport const DELETE_POST_FAIL = \"DELETE_POST_FAIL\";\n\nexport const UPDATE_CREATING_POST_SUCCESS = \"UPDATE_CREATING_POST_SUCCESS\";\nexport const UPDATE_CREATING_POST_FAIL = \"UPDATE_CREATING_POST_FAIL\";\n\nexport const PROXIMITY_POSTS_SUCCESS = \"PROXIMITY_POSTS_SUCCESS\";\nexport const PROXIMITY_POSTS_FAIL = \"PROXIMITY_POSTS_FAIL\";\n\n\n\nexport const allSitePosts = () => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/site/posts`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const resultData = await result.json();\n    if (resultData) {\n      dispatch({\n        type: ALL_SITE_POSTS_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: ALL_SITE_POSTS_FAIL,\n      });\n    }\n    return resultData;\n  };\n};\n\nexport const createPost = (postData) => {\n  //console.log(\"CREATE POST ACTION: postData:\", postData);\n\n  const {\n    userId,\n    title,\n    description,\n    category,\n    postType,\n    email,\n    phone,\n    address,\n    city,\n    state,\n    zip,\n    postImage,\n    activated,\n  } = postData;\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/create`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        userId,\n        title,\n        description,\n        category,\n        postType,\n        email,\n        phone,\n        address,\n        city,\n        state,\n        zip,\n        postImage,\n        activated,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: CREATE_POST_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: CREATE_POST_FAIL,\n      });\n    }\n\n    return resultData;\n  };\n};\n\nexport const getPost = () => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/post`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"forteworksToken\"),\n      },\n    });\n\n    const resultData = await result.json();\n    if (resultData) {\n      dispatch({\n        type: POST_GET_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: POST_GET_FAIL,\n      });\n    }\n    return resultData;\n  };\n};\n\nexport const updatePost = (postData) => {\n  console.log(\"POST ACTION UPDATE POST: postData:\", postData);\n  const {\n    id,\n    userId,\n    title,\n    description,\n    category,\n    postType,\n    email,\n    phone,\n    address,\n    city,\n    state,\n    zip,\n    website,\n    postImage,\n    activated,\n  } = postData;\n  //post versus posts in URL\n  return async (dispatch) => {\n    // ? why getting a 404 for posts/update ? \n    //? NOT FOUND ? ? ? ? ? \n    const result = await fetch(`${API_URL}/posts/update`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id,\n        userId,\n        title,\n        description,\n        category,\n        postType,\n        email,\n        phone,\n        address,\n        city,\n        state,\n        zip,\n        website,\n        postImage,\n        activated,\n      }),\n    });\n\n    const resultData = await result.json();\n    console.log(\"post update resultData:\",resultData);\n    if (resultData.success) {\n      dispatch({\n        type: UPDATE_POST_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: UPDATE_POST_FAIL,\n      });\n    }\n\n    return resultData;\n  };\n};\n\n// filter : FILTERS ALL POSTS:\nexport const filterPosts = (key) => {\n  console.log(\"filter key is ...\", key);\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/filter`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        key,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: FILTER_POSTS_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: FILTER_POSTS_FAIL,\n      });\n    }\n    return resultData;\n  };\n};\n\n \n\nexport const filterOwnersPosts = (key, userId) => {\n  console.log(\"OWNERS: filter key is ...\", key);\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/filterOwners`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        key,\n        userId,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: FILTER_OWNERS_POSTS_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: FILTER_OWNERS_POSTS_FAIL,\n      });\n    }\n    return resultData;\n  };\n};\n\n\nexport const allUserPosts = (key) => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/user/posts`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        key,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: ALL_USER_POSTS_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: ALL_USER_POSTS_FAIL,\n      });\n    }\n    return resultData;\n  };\n  \n};\n\n\n\n\n\nexport const deletePost = (key) => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/delete`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        key,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: DELETE_POST_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: DELETE_POST_FAIL,\n      });\n    }\n    return resultData;\n  };\n};\n\n\n\nexport const initPost = (key) => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/initPost`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        key,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: INIT_POST_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: INIT_POST_FAIL,\n      });\n    }\n    return resultData;\n  };\n  \n};\n\n\nexport const acceptPost = (key) => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/acceptPost`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        key,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: ACCEPT_POST_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: ACCEPT_POST_FAIL,\n      });\n    }\n    return resultData;\n  };\n  \n};\n\n\nexport const cancelPost = (key) => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/cancelPost`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        key,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: CANCEL_POST_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: CANCEL_POST_FAIL,\n      });\n    }\n    return resultData;\n  };\n  \n};\n\nexport const clearPost = (key) => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/clearPost`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        key,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: CLEAR_POST_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: CLEAR_POST_FAIL,\n      });\n    }\n    return resultData;\n  };\n  \n};\n\n\n\nexport const updateCreatingPost = (postData) => {\n  console.log(\"POST ACTION UPDATE  CREATING-POST: postData:\", postData);\n  const {\n    id,\n    userId,\n    title,\n    description,\n    category,\n    postType,\n    email,\n    phone,\n    address,\n    city,\n    state,\n    zip,\n    website,\n    postImage,\n    activated,\n  } = postData;\n  //post versus posts in URL\n  return async (dispatch) => {\n    // ? why getting a 404 for posts/update ? \n    const result = await fetch(`${API_URL}/posts/updateCreating`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id,\n        userId,\n        title,\n        description,\n        category,\n        postType,\n        email,\n        phone,\n        address,\n        city,\n        state,\n        zip,\n        website,\n        postImage,\n        activated,\n      }),\n    });\n\n    const resultData = await result.json();\n    console.log(\"post update resultData:\",resultData);\n    if (resultData.success) {\n      dispatch({\n        type: UPDATE_CREATING_POST_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: UPDATE_CREATING_POST_FAIL,\n      });\n    }\n\n    return resultData;\n  };\n};\n\n/////////////////////////\nexport const setStatusGreen = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_STATUS_GREEN,\n    });\n  };\n};\nexport const setStatusBlue = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_STATUS_BLUE,\n    });\n  };\n};\nexport const getStatusColor = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: GET_STATUS_COLOR,\n    });\n  };\n};\n//////////////////////////////////\n\nexport const postsWithinProximity = (zip,miles) => {\n\n  const data = {\"zip\":zip,\"miles\":miles};\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/posts/proximity`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        data,\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success) {\n      dispatch({\n        type: PROXIMITY_POSTS_SUCCESS,\n        payload: resultData,\n      });\n    } else {\n      dispatch({\n        type: PROXIMITY_POSTS_FAIL,\n      });\n    }\n    return resultData;\n  };\n  \n};\n","import Icon from \"@material-ui/core/Icon\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as postAction from \"../../redux/actions/postAction\";\n\nexport default function AppFooter() {\n  // Purpose: to sync state between upper and lower components.\n  const dispatch = useDispatch();\n  const Kolor = useSelector((state) => state.post.statusColor);\n  \n  useEffect(() => {\n    dispatch(postAction.getStatusColor())\n      .then(async () => {\n        // result would be undefined\n        //console.log(\"2 status color:\", Kolor);\n         \n      })\n      .catch((err) => console.log(err));\n  }, [Kolor]);\n\n  const setStatusBlue = () => {\n    dispatch(postAction.setStatusBlue())\n      .then(async () => {\n        // result would be undefined\n      })\n      .catch((err) => console.log(\"error:\", err));\n  };\n  const setStatusGreen = () => {\n    dispatch(postAction.setStatusGreen())\n      .then(async () => {\n        // result would be undefined\n      })\n      .catch((err) => console.log(\"error:\", err));\n  };\n  return (\n    <div style={{position:\"fixed\",bottom:\"0px\",left:\"0px\",background:\"#000\",opacity:\".8\", width:\"100%\", height:\"45px\"}}>\n      <p style={{color:\"#fff\",fontSize:\".7em\"}}>Servewerx is created <span style={{fontWeight:\"bold\",fontStyle:\"italic\"}}>by small business for small business</span>. \n      &nbsp;<a href=\"https://www.forteworks.com\"  style={{textDecoration:\"none\",color:\"orange\",cursor:\"pointer\"}} target=\"blank\">forteworks.com</a> \n      &nbsp;&nbsp;\n      <a\n                href=\"tel:8122670592\"\n                style={{ color: \"orange\", textDecoration: \"none\" }}\n              >\n                (812) 267-0592<Icon className=\"appIcon\">phone</Icon>\n              </a>\n              &nbsp;&nbsp;\n              <a\n                href=\"mailto:forteworks@gmail.com\"\n                style={{ color: \"orange\", textDecoration: \"none\" }}\n              >\n                forteworks@gmail.com<Icon className=\"appIcon\">email</Icon>\n              </a>\n      </p>\n    </div>\n  );\n}\n\n\n","import { config } from '../../Constants';\n\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAIL = \"REGISTER_USER_FAIL\";\n\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_FAIL = \"LOGIN_USER_FAIL\";\n\nexport const LOGOUT_USER_SUCCESS = \"LOGOUT_USER_SUCCESS\";\nexport const LOGOUT_USER_FAIL = \"LOGOUT_USER_FAIL\";\n\n//\nexport const ALL_USERS_SUCCESS = \"ALL_USERS_SUCCESS\";\nexport const ALL_USERS_FAIL = \"ALL_USERS_FAIL\";\n\nexport const USER_PROFILE_SUCCESS = \"USER_PROFILE_SUCCESS\";\nexport const USER_PROFILE_FAIL = \"USER_PROFILE_FAIL\";\n\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAIL = \"UPDATE_USER_FAIL\";\n\nexport const FILTER_USERS_SUCCESS = \"FILTER_USERS_SUCCESS\";\nexport const FILTER_USERS_FAIL = \"FILTER_USERS_FAIL\";\n\n\nexport const GET_CATEGORIES_SUCCESS = \"GET_CATEGORIES_SUCCESS\";\nexport const GET_CATEGORIES_FAIL = \"GET_CATEGORIES_FAIL\";\n\n\n//const API_URL = \"http://localhost:4000/api\";\n//const API_URL = \"https://arcane-eyrie-05882.herokuapp.com/api\"\n\nconst API_URL = config.url.API_URL\n\nexport const registerUser = (authData) => {\n  const { fullName, email, password , sms_secret} = authData;\n  return async (dispatch) => {\n    //benefit: can now make async http request to Register\n    const result = await fetch(`${API_URL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        fullName,\n        email,\n        password,\n        sms_secret\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success){\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: resultData,\n          });\n    } else {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n          });\n    }\n   \n    return resultData;\n\n  };\n};\n\nexport const logoutUser = () => {\n\n  return async (dispatch) => {\n    dispatch({\n        type: LOGOUT_USER_SUCCESS,\n        })\n  }\n}\n\nexport const loginUser = (authData) => {\n  const { email, password } = authData;\n  return async (dispatch) => {\n    //benefit: can now make async http request to Login\n    const result = await fetch(`${API_URL}/users/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      });\n  \n      const resultData = await result.json();\n      if(resultData.success){\n        dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: resultData,\n          });\n      } else {\n        dispatch({\n            type: LOGIN_USER_FAIL,\n          });\n      }\n      return resultData; //Why?:  so that we have access to it in the dispatch to the action from loginScreen.\n    //\n    \n  };\n};\n\n\nexport const allUsers = () => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/users/users`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n     \n      });\n  \n      const resultData = await result.json();\n      if(resultData){\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: resultData,\n          });\n      } else {\n        dispatch({\n            type: ALL_USERS_FAIL,\n          });\n      }\n      return resultData;  \n    \n  };\n};\n\n\n\nexport const userProfile = () => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/users/profile`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\":localStorage.getItem('forteworksToken')\n        },\n     \n      });\n  \n      const resultData = await result.json();\n      if(resultData){\n        dispatch({\n            type: USER_PROFILE_SUCCESS,\n            payload: resultData,\n          });\n      } else {\n        dispatch({\n            type: USER_PROFILE_FAIL,\n          });\n      }\n      return resultData;  \n    \n  };\n};\n\n\nexport const updateUser = (authData) => {\n  console.log('authData',authData)\n  const { fullName, email, phone , profileImage, address, city, state, zip, website } = authData;\n  return async (dispatch) => {\n    //benefit: can now make async http request to Register\n    const result = await fetch(`${API_URL}/users/update`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        fullName,\n        email,\n        phone,\n        profileImage,\n        address,\n        city,\n        state,\n        zip,\n        website\n      }),\n    });\n\n    const resultData = await result.json();\n    if (resultData.success){\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: resultData,\n          });\n    } else {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n          });\n    }\n   \n    return resultData;\n\n  };\n};\n\n// filter \nexport const filterUsers = (key) => {\n  console.log('filter key is ...',key)\n  return async (dispatch) => {\n    \n    const result = await fetch(`${API_URL}/users/filter`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          key,\n        }),\n      });\n  \n      const resultData = await result.json();\n      if(resultData.success){\n        dispatch({\n            type: FILTER_USERS_SUCCESS,\n            payload: resultData,\n          });\n      } else {\n        dispatch({\n            type: FILTER_USERS_FAIL,\n          });\n      }\n      return resultData;  \n    \n  };\n   \n\n\n\n};\nexport const getCategories = () => {\n  return async (dispatch) => {\n    const result = await fetch(`${API_URL}/users/category`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n     \n      });\n  \n      const resultData = await result.json();\n      if(resultData){\n        dispatch({\n            type: GET_CATEGORIES_SUCCESS,\n            payload: resultData,\n          });\n      } else {\n        dispatch({\n            type: GET_CATEGORIES_FAIL,\n          });\n      }\n      return resultData;  \n    \n  };\n};","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n//---\nimport { animated, useSpring } from \"react-spring\";\nimport \"../../App.css\";\n\nconst calc = (x, y) => [\n  -(y - window.innerHeight / 2) / 20,\n  (x - window.innerWidth / 2) / 20,\n  1.07,\n];\nconst trans = (x, y, s) => `perspective(600px)  scale(${s})`;\nconst HomeCardOne = () => {\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 350, friction: 40 },\n  }));\n  return (\n    <div className=\"homeCard\">\n      <animated.div\n        className=\"card\"\n        onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n        onMouseLeave={() => set({ xys: [0, 0, 1] })}\n        style={{ transform: props.xys.interpolate(trans) }}\n        title=\"Title hello...\"\n      >\n        <div\n          className=\"innerHomeCard\"\n          style={{ height: \"125px\", padding: \"20px\" }}\n        >\n          <Typography variant=\"h5\" component=\"h2\">\n            Skilled Professionals\n          </Typography>\n\n        \n          <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\n            Small Businesses\n          </Typography>\n        </div>\n      </animated.div>\n    </div>\n  );\n};\n\nexport default HomeCardOne;\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n//---\nimport { animated, useSpring } from \"react-spring\";\nimport \"../../App.css\";\n\nconst calc = (x, y) => [\n  -(y - window.innerHeight / 2) / 20,\n  (x - window.innerWidth / 2) / 20,\n  1.07,\n];\nconst trans = (x, y, s) => `perspective(600px)  scale(${s})`;\nconst HomeCardThree = () => {\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 350, friction: 40 },\n  }));\n  return (\n    <div className=\"homeCard\">\n      <animated.div\n        className=\"card\"\n        onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n        onMouseLeave={() => set({ xys: [0, 0, 1] })}\n        style={{ transform: props.xys.interpolate(trans) }}\n        title=\"Title hello...\"\n      >\n        <div\n          className=\"innerHomeCard\"\n          style={{ height: \"125px\", padding: \"20px\" }}\n        >\n          <Typography variant=\"h5\" component=\"h2\">\n            Hiring\n          </Typography>\n\n          <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\n            Find a professional\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\n            Find a subcontractor\n          </Typography>\n        </div>\n      </animated.div>\n    </div>\n  );\n};\n\nexport default HomeCardThree;\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n//---\nimport { animated, useSpring } from \"react-spring\";\nimport \"../../App.css\";\n\nconst calc = (x, y) => [\n  -(y - window.innerHeight / 2) / 20,\n  (x - window.innerWidth / 2) / 20,\n  1.07,\n];\nconst trans = (x, y, s) => `perspective(600px)  scale(${s})`;\nconst HomeCardTwo = () => {\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 350, friction: 40 },\n  }));\n  return (\n    <div className=\"homeCard\">\n      <animated.div\n        className=\"card\"\n        onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n        onMouseLeave={() => set({ xys: [0, 0, 1] })}\n        style={{ transform: props.xys.interpolate(trans) }}\n        title=\"Title hello...\"\n      >\n        <div\n          className=\"innerHomeCard\"\n          style={{ height: \"125px\", padding: \"20px\" }}\n        >\n          <Typography variant=\"h5\" component=\"h2\">\n            Looking For Work\n          </Typography>\n\n          <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\n            Find a job\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\n            Near You\n          </Typography>\n        </div>\n\n        {/* <Button\n            size=\"small\"\n            onClick={() => {\n              alert(\"call or text me: 812-267-0592\");\n            }}\n          >\n            +\n          </Button> */}\n      </animated.div>\n    </div>\n  );\n};\n\nexport default HomeCardTwo;\n","import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Video extends Component {\n    constructor(props) {\n        super(props);\n     \n      \n      }\n    render () {\n        return (\n        <div className='player-wrapper'>\n            <ReactPlayer\n            className='react-player fixed-bottom'\n            url= {this.props.url}\n            width='100%'\n            height='100%'\n            controls = {true}\n\n            />\n        </div>\n        )\n    }\n}\n\nexport default Video;","import Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Parallax, ParallaxLayer } from \"@react-spring/parallax\";\nimport React from \"react\";\nimport HomeCardOne from \"./cards/HomeCardOne\";\nimport HomeCardThree from \"./cards/HomeCardThree\";\nimport HomeCardTwo from \"./cards/HomeCardTwo\";\nimport Video from \"./components/video/Video\";\nexport default function Home(props) {\n  //console.log(\"home props:\", props);\n  return (\n    <React.Fragment>\n      <Grid container>\n        <Parallax\n          pages={2}\n          style={{ top: \"0\", left: \"0\" }}\n          className=\"component-full-background-image\"\n        >\n          <ParallaxLayer\n            offset={0}\n            speed={1}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              // background:\"red\"\n            }}\n          >\n            <Grid container>\n              <Grid item xs={12} sm={12}>\n                <Grid\n                  container\n                  spacing={1}\n                  alignItems=\"center\"\n                  justify=\"center\"\n                  direction=\"row\"\n                  style={{\n                    // backgroundImage: `url(${logo})`,\n                    // backgroundSize: \"contain\",\n                    height: \"500px\",\n                    backgroundRepeat: \"no-repeat\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    paddingTop: \"100px\",\n                  }}\n                >\n                  <Grid item xs={12} sm={3}>\n                    <HomeCardOne></HomeCardOne>\n                  </Grid>\n                  <Grid item xs={12} sm={3}>\n                    <HomeCardTwo></HomeCardTwo>\n                  </Grid>\n                  <Grid item xs={12} sm={3}>\n                    <HomeCardThree></HomeCardThree>\n                  </Grid>\n                  {/* <Grid item xs={12} sm={3}>\n              <HomeCardFour browse={props.browse}></HomeCardFour> \n              </Grid> */}\n                  <Grid item xs={12} sm={12}>\n                    <div style={{ marginTop: \"40vh\" }}>\n                      <div className=\"server-logo-transparent\"></div>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </ParallaxLayer>\n\n          <ParallaxLayer\n            offset={1}\n            speed={2}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              color: \"white\",\n              boxShadow: \"-8px 0px 20px #000\",\n            }}\n            className=\"component-background-image\"\n          >\n            <Grid\n              container\n              justify=\"center\"\n              alignItems=\"center\"\n              style={{ marginBottom: \"40px\" }}\n            >\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                style={{\n                  textShadow: \"1px 0px #000\",\n                  backgroundColor:\"rgba(0,0,0,.5)\"\n                  \n                }}\n              >\n                <h2>Browse For Free</h2>\n                <p>Post Business Cards for $1.</p>\n                <p style={{fontStyle:\"italic\"}}>( securely through 'Stripe' )</p>\n                <h3>Find Someone Near You.</h3>\n               \n              </Grid>\n\n              <Card className=\"storyCard\" style={{marginBottom:\"100px\",paddingBottom:\"100px\"}}>\n                <Grid container direction=\"row\"   alignItems=\"center\"\n                    justify=\"center\" className='storyContainer'>\n                  <Grid\n                    item\n                    xs={12}\n                    sm={10}\n                    className=\"storyGrid\"\n                   \n                  >\n                    <h3>Why Servewerx?</h3>\n                    <p>It's a simple bulletin board for your business card basically.</p>\n                    <p>\n                      I worked construction and remodeling jobs for 15 years\n                      straight, back in the 90's and early 2000's. For the last\n                      11 years I've been working creating web applications. I\n                      recently decided to start up a small remodeling business\n                      myself, 'Blue Cottage Remodeling'. And I've noticed that\n                      getting your name out there is a little more expensive\n                      than I'd like.\n                    </p>\n                    <p>\n                      It can cost anywhere from $15 to $150 a week to put an ad in your local\n                      paper depending on where you live. About $5 to post on Craigslist. </p>\n                      <p> Then you probably already created a 'facebook' page for your business. I think\n                      that's free, but to promote it you have to spend some\n                      money. Not to even mention the more expensive advertising\n                      options like AngiesList or HomeAdvisor. They won't even tell you how much they will charge.\n                    </p>\n                    <p>\n                      So I figured I'd just do it for free. But then, you know,\n                      there'd be people who didn't really care, posting crazy\n                      stuff just because it was free. So I'm charging a dollar for a month , which is a pretty\n                      good deal for both you and me. And everytime I put an add\n                      out for Servewerx, your name gets out there too.\n                    </p>\n                    <p>\n                      I'll make more cool features for you in the future but for\n                      now this is what I got. \n                    </p>\n\n                    <p> - Bayon Forte </p>\n                  </Grid>\n\n                  <Grid\n                    item\n                    xs={12}\n                    sm={2}\n                  \n                    \n                  >\n                    <div\n                      className=\"creatorImage\"\n                      style={{ height: \"100px\" }}\n                    ></div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container direction=\"row\" >\n                      <Grid item xs={12} sm={4}>\n                      <Video url={`https://www.youtube.com/watch?v=BJvh9cBl4IU`} style={{marginBottom:\"100px\"}}></Video>\n                      </Grid>\n                      <Grid item xs={12} sm={4}>\n                      <Video url={`https://www.youtube.com/watch?v=58EFkGwTMnY`} style={{marginBottom:\"100px\"}}></Video>\n\n                        </Grid>\n                    </Grid>\n                \n\n                \n\n\n                 \n\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </ParallaxLayer>\n        </Parallax>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\n/*\nTO GO: reat-spring Parallax \n\nimport { Parallax, ParallaxLayer } from \"@react-spring/parallax\";\n\n\n <Parallax pages={2} style={{ top: \"0\", left: \"0\" }}>\n        <ParallaxLayer\n          offset={0}\n          speed={2.5}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <p>Scroll down</p>\n        </ParallaxLayer>\n\n        <ParallaxLayer\n          offset={1}\n          speed={2}\n          style={{ backgroundColor: \"#ff6d6d\" }}\n        />\n\n        <ParallaxLayer\n          offset={1}\n          speed={0.5}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            color: \"white\",\n          }}\n        >\n          <p>Scroll up</p>\n        </ParallaxLayer>\n      </Parallax>\n\n*/\n","import Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport \"./admin.css\";\n\nconst AdminPage = (props) => {\n  \n  const [homeScore, setHomeScore] = useState(0);\n  const [visitorScore, setVisitorScore] = useState(0);\n  const [inning, setInning] = useState(0);\n  const [outs, setOuts] = useState(0);\n  const [balls, setBalls] = useState(0);\n  const [walks, setWalks] = useState(0);\n  const [strikes, setStrikes] = useState(0);\n  const [lastUp, setLastUp] = useState(\"\");\n \n  const players = ['Colton','Gabe','Wesson','Weston','Wyeth','Joshua', 'Liam','Bryce','Sean','Gavin']\n\n\n  const ball = () => {\n    if(balls < 3){\n      setBalls(balls+1)\n    }else{\n      alert(\"WALK\")\n      setWalks(walks + 1)\n      setBalls(0)\n    }\n  }\n  \n  const strike = () => {\n    if(strikes < 2){\n      setStrikes(strikes+1)\n    }else{\n     \n      if(outs < 2){\n        setOuts(outs +1)\n        alert(\"STRIKE OUT!\")\n      }else{\n        alert('THREE OUTS!')\n        switchAtBat() //reset outs,strikes,balls,walks\n      }\n      setStrikes(0);\n    }\n  }\n\n  const out = () => {\n    if(outs < 2){\n      setOuts(outs + 1);\n    }else{\n       alert('THREE OUTS!')\n       switchAtBat() //reset outs,strikes,balls,walks\n       \n    }\n  }\n\n  const scoreHome = () => {\n    setHomeScore(homeScore + 1) \n  }\n\n  const scoreVisitor = () => {\n    setVisitorScore(visitorScore + 1) \n  }\n  const nextInning = () => {\n    setInning(inning + 1);\n  }\n\n  const switchAtBat = () => {\n    setBalls(0);\n    setWalks(0);\n    setStrikes(0);\n    setOuts(0);\n  }\n\n\n  const newGame = () => {\n    setBalls(0);\n    setWalks(0);\n    setStrikes(0);\n    setOuts(0);\n    setInning(1);\n    setHomeScore(0);\n    setVisitorScore(0);\n  }\n\n  return (\n    <Card className=\"baseball\">\n      <Grid\n        container\n        spacing={0}\n        direction=\"row\"\n        className=\"main-component-container\"\n      >\n        <Grid container align=\"center\" justify=\"center\">\n          <Grid item xs={6}>\n          <h3>Baseball</h3>\n\n          </Grid>\n          <Grid item xs={6}>\n            <button onClick={newGame}>NEW</button>\n          </Grid>\n        </Grid>\n        <Grid container align=\"center\" justify=\"center\" className=\"innings\">\n          <Grid item xs={6}>\n            <label>Inning:</label><div className=\"stat\">{inning}</div>\n          </Grid>\n          <Grid item xs={6}>\n          <button onClick={nextInning}>+</button>\n        </Grid>\n        </Grid>\n       \n        <Grid container xs={12} className=\"scores\">\n          <Grid item xs={6} className=\"homeScore\">\n            <label>Home:</label><div className=\"stat\">{homeScore}</div>\n          </Grid>\n          <Grid item xs={6} className=\"visitorScore\">\n            <label>Visitors:</label><div className=\"stat\">{visitorScore}</div>\n          </Grid>\n        </Grid>\n        <Grid container xs={12}>\n          <Grid item xs={6}>\n            <button onClick={scoreHome}>+</button>\n          </Grid>\n          <Grid item xs={6}>\n          <button onClick={scoreVisitor}>+</button>\n          </Grid>\n        </Grid>\n\n        <Grid container className=\"ballsAndStrikes\">\n          <Grid item xs={4}>\n            <label>Balls:</label><div className=\"stat balls\">{balls}</div>\n          </Grid>\n          <Grid item xs={4}>\n            <label>Strikes:</label><div className=\"stat strikes\">{strikes}</div>\n          </Grid>\n          <Grid item xs={4}>\n           <label>Outs:</label><div className=\"stat out\">{outs}</div>\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={4}>\n          <button onClick={ball}>+</button>\n          </Grid>\n          <Grid item xs={4}>\n          <button onClick={strike}>+</button>\n          </Grid>\n          <Grid item xs={4}>\n          <button onClick={out}>+</button>\n          </Grid>\n        </Grid>\n        <Grid container >\n          <Grid item xs={4}>\n            <label>walks: </label><div className=\"stat\">{walks}</div>\n          </Grid>\n        </Grid>\n        <Grid container >\n        <Grid item xs={6}>\n          <label>Last Up:</label>\n        </Grid>\n        <Grid item xs={6}>\n        <select>\n         {\n           players.map( (p,i) => {\n             return (\n               <option key={i}>{p}</option>\n             )\n           })\n         }\n        </select>\n        </Grid>\n      \n        </Grid>\n       \n        \n      </Grid>\n    </Card>\n  );\n};\n\nexport default AdminPage;\n","import Grid from \"@material-ui/core/Grid\";\nimport Icon from \"@material-ui/core/Icon\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport \"../../App.css\";\nimport { config } from \"../../Constants\";\n\nconst AllSitePostsDisplayCard = (props) => {\n  let [loading, setLoading] = useState(false);\n // let [color, setColor] = useState(\"red\");\n\n  var us_states = useSelector((state) => state.auth.usstates);\n  const IMG_URL = config.url.IMG_URL;\n  var auth = useSelector((state) => state.auth.authorized);\n  var user = useSelector((state) => state.auth.user);\n  const categories = useSelector((state) => state.post.categories);\n\n  const [currentCategory, setCurrentCategory] = useState(\"\");\n  const [seeDetails, setSeeDetails] = useState(false);\n  //const [seeMap, setSeeMap] = useState(false);\n\n  const [inProgress, setInProgress] = useState(false);\n\n  //SET DEFAULT IMAGE IF NON EXISTS.\n  if (props.post.postImage == \"default\") {\n    props.post.postImage = \"servewerx_your_biz_card_here.png\";//servewerx_level_scale-1.0-h100.png\n  }\n  // https://servewerx-space-1.nyc3.digitaloceanspaces.com/servewerx_your_biz_card_here.png\n  // const  convertDateToReadableString = (date) => {\n  //   if (!date) return\n  //   const d = new Date(date.replace('-', '/'))\n  //   return d.toLocaleDateString('en-US', {\n  //     year: 'numeric',\n  //     month: 'long',\n  //     day: 'numeric'\n  //   })\n  // }\n  /**/\n  const formatIsoStringDate = (isoStringDate) => {\n    let sp = \"/\";\n    if (typeof isoStringDate === \"undefined\") {\n      sp = \"/\";\n    }\n    //let today = new Date();\n    let currentDate = new Date(isoStringDate);\n    var dd = currentDate.getDate();\n    var mm = currentDate.getMonth() + 1; //As January is 0.\n    var yyyy = currentDate.getFullYear();\n\n    if (dd < 10) dd = \"0\" + dd;\n    if (mm < 10) mm = \"\" + mm;\n    return mm + sp + dd + sp + yyyy;\n  };\n\n  // const handleMapLoadSpinner = () => {\n  //   console.log(\"handle map load spinner \");\n  //   setLoading(false);\n  // };\n\n  //console.log(\"inProgress:\", inProgress);\n  useEffect(() => {\n    setInProgress(inProgress);\n  }, [inProgress]);\n\n  useEffect(() => {\n    setCurrentCategory(categories[parseInt(props.post.category)]);\n    console.log('current category:',currentCategory)\n  }, []);\n\n  // const cleanUpMapBecauseUncontrolledOverlay = () => {\n  //   if(seeMap){\n  //     setSeeMap(false);\n  //     setSeeDetails(false);\n  //   }\n\n  // }\n  return (\n    <>\n      <Grid container direction=\"row\" className=\"cardCard\">\n        <Grid item xs={12} sm={6} style={{ textAlign: \"left\" }}>\n          <p className=\"cardTitle\">{props.post.title}</p>\n\n          {props.post.postType === \"1\" && (\n            <p className=\"cardPostType\">\"Looking For Work\" </p>\n          )}\n          {props.post.postType === \"2\" && (\n            <p className=\"cardPostType\">\"Hiring\" </p>\n          )}\n          {props.post.postType === \"3\" && (\n            <p className=\"cardPostType\">\"Open For Business\" </p>\n          )}\n\n          <p className=\"cardCategory\">{props.post.category} </p>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <img\n            src={`${IMG_URL}/` + props.post.postImage} //+ props.props.post.postImage\n            alt=\"img\"\n            className=\"cardImg\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n          <Grid>\n            <button\n              onClick={() => {\n                setSeeDetails(!seeDetails);\n              }}\n              style={{ cursor: \"pointer\" }}\n            >\n              {seeDetails ? \"less...\" : \"more...\"}\n            </button>\n          </Grid>\n          {seeDetails && (\n            <>\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"left\"\n              >\n                <Grid item xs={12} sm={6} style={{ textAlign: \"left\" }}>\n                  <div className=\"cardDescription\">\n                    {props.post.description}\n                  </div>\n                  <div className=\"cardContactInfo\">\n                    <a\n                      href={\"mailto:\" + props.post.email}\n                      style={{ color: \"#222\", textDecoration: \"none\" }}\n                    >\n                      {props.post.email} <Icon className=\"cardIcon\">email</Icon>\n                    </a>\n                  </div>\n\n                  <div className=\"cardContactInfo\">\n                    <a\n                      href={\"tel:\" + props.post.phone}\n                      style={{ color: \"#222\", textDecoration: \"none\" }}\n                    >\n                      {props.post.phone}\n                      <Icon className=\"cardIcon\">phone</Icon>\n                    </a>\n                  </div>\n                  <div className=\"cardContactInfo\">\n                    <a\n                      href={props.post.website}\n                      className=\"appAnchor\"\n                      target=\"blank\"\n                    >\n                      {props.post.website}\n                      <Icon className=\"cardIcon\">web</Icon>\n                    </a>\n                  </div>\n                  <div className=\"cardContactInfo\">{props.post.city} ,{us_states[parseInt(props.post.state)]} &nbsp;{props.post.zip}  </div>\n                  \n                  <div className=\"cardContactInfo\">\n                    {formatIsoStringDate(props.post.dateCreated)}\n                  </div>\n                </Grid>\n\n                {/* <Grid container justify=\"left\">\n                  <Grid>\n                    {seeDetails && (\n                      <button\n                        onClick={() => {\n                          setSeeMap(!seeMap);\n                          // setLoading(!loading);\n                          if (!seeMap) {\n                            setLoading(true);\n                          } else {\n                            setLoading(false);\n                          }\n                          console.log(\"SETTING L O A D I N G !!!!! \");\n                        }}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        map\n                      </button>\n                    )}\n                    {loading && <p>...loading...</p>}\n                  </Grid>\n                </Grid> */}\n\n                {/* \n                npm package zipcodes !? \n                <Grid\n                  item\n                  xs={12}\n                 \n                  style={{ overflow: \"hidden !important\" }}\n                >\n                  {seeMap && (\n                    <Grid\n                      item\n                      xs={12}\n                      style={{\n                        \n                        padding: \"0 0 0 0\",\n                        height:\"500px\",\n                        marginLeft:\"3vw\"\n                      }}\n                    >\n                      <GeoLocatorByZip\n                        zip={props.post.zip}\n                        callback={handleMapLoadSpinner}\n                      ></GeoLocatorByZip>\n                    </Grid>\n                  )}\n                </Grid> */}\n              </Grid>\n            </>\n          )}\n        </Grid>\n        <div >\n          <FadeLoader\n            color={\"red\"}\n            loading={loading}\n            size={1}\n            height={4}\n            width={2}\n          />\n        </div>\n      </Grid>\n      <p className=\"appDevNote\">AllSitePostsDisplayCard</p>\n    </>\n  );\n};\n\nexport default AllSitePostsDisplayCard;\n\n/*\nTO GO: SPINNER: \ndeps:\nimport FadeLoader from \"react-spinners/FadeLoader\";\n\nfn:\nlet [loading, setLoading] = useState(false);\nlet [color, setColor] = useState(\"red\");\n\njsx:\n<div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={color} loading={loading}  size={1} height={4} width={2}   />\n</div>\n*/\n","import Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function AreYouSureModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleYes = () => {\n      console.log('YES')\n      console.log('props:',props)\n      props.deleteItem();\n      setOpen(false);\n  }\n  const handleNo = () => {\n    console.log('NO')\n    console.log('props:',props)\n    setOpen(false);\n\n}\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <p id=\"simple-modal-description\">\n        Are you sure you want to delete this? \"{props.data.title}\"\n      </p>\n      <button type=\"button\" onClick={handleYes}>\n        Yes \n      </button>\n      <button type=\"button\" onClick={handleNo}>\n        No \n      </button>\n      \n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen} style={{color:\"red\"}}>\n        Delete\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n       \n\n      </Modal>\n    </div>\n  );\n}\n","import Grid from \"@material-ui/core/Grid\";\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as yup from \"yup\";\nimport \"../../App.css\";\nimport * as authAction from \"../../redux/actions/authAction\";\nimport * as postAction from \"../../redux/actions/postAction\";\nimport AreYouSureModal from \"../components/AreYouSureModal\";\n\nconst formSchema = yup.object({\n  title: yup.string().required().min(3),\n  email: yup.string().email().required(),\n  phone: yup.string().min(10),\n});\n\n\nconst EditPostCard = (props) => {\n  //console.log(\"EDIT POST CARD props:\", props);\n  const currentPost = props.data\n\n  const Kolor = useSelector((state) => state.post.statusColor);\n  const [categories, setCategories] = useState([])\n  var haveCategories = useSelector((state) => state.auth.haveCategories);\n\n\n  useEffect( () => {\n    //get initial categories \n    dispatch(authAction.getCategories())\n    .then((results) => {\n     // console.log(\"category results:\",results)\n      setCategories(results)\n    })\n    .catch((err) => console.error(err));\n\n  },[])\n  \n\n  useEffect(() => {\n    dispatch(postAction.getStatusColor())\n      .then(async () => {\n        // result would be undefined\n        //console.log(\"NEW >>> hook status color:\", Kolor);\n        //setKolor(Kolor)\n      })\n      .catch((err) => console.log(err));\n    /* Dependencies: \n        import * as statusAction from \"../../redux/actions/statusAction\";\n        import { useDispatch, useSelector } from \"react-redux\";\n        const Kolor = useSelector((state) => state.status.statusColor);\n      */\n  }, [Kolor]);\n\n  /* currentPost.xxx\npostType: \"1\"\ncity: \"asdfasdf\"\ndescription: \"will do anything\"\nemail: \"sdf@sdf.com\"\nphone: \"1231231233\"\npostImage: \"\"\nstate: \"5\"\ntitle: \"Need Cash Now\"\nuserId: \"601a9e4d64d8aa0004c8c07b\"\nzip: \"34555\"\n__v: 0\n_id: \"60730537d09d5d33501fc987\"\n   */\n\n  const dispatch = useDispatch();\n  const [seeDetails, setSeeDetails] = useState(false);\n  const [inProgress, setInProgress] = useState(false);\n\n  const [activated, setActivated] = useState(false);\n\n  var user = useSelector((state) => state.auth.user);\n  var us_states = useSelector((state) => state.auth.usstates);\n  //var categories = useSelector((state) => state.post.categories);\n\n  //console.log(\"STATE---------user:\", user);\n  useEffect(() => {\n    setInProgress(inProgress);\n  }, [inProgress]);\n\n  const post_categories = [\"select one\", \"Looking for Work\", \"Looking to Hire\",\"Open for Business\"];\n  const activatedOptions = [\"Set Activation\", \"activated\", \"deactivated\"];\n  //console.log(\"EditPostCard.js props:\", props);\n  const deleteItem = () => {\n   // console.log(\"delete item \", currentPost._id);\n    //call to a redux action.\n    dispatch(postAction.deletePost(currentPost._id))\n      .then(async (res) => {\n       // console.log(\"res:\", res);\n        dispatch(postAction.setStatusGreen()).catch((err) =>\n          console.error(err)\n        );\n      })\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <>\n    {haveCategories && \n    \n  \n      <React.Fragment>\n        <Grid\n          container\n          spacing={0}\n          // align=\"center\"\n          // justify=\"center\"\n          direction=\"row\"\n          className=\"cardGridContainer\"\n        >\n          <Grid item xs={12} sm={10}  >\n            {/* //FORM AND REDUX  part 3 JSX*/}\n \n            <Formik\n            style={{border:\"solid 1px purple\"}}\n              initialValues={{\n                id: currentPost._id,\n                userId: currentPost.userId,\n                title: currentPost.title,\n                description: currentPost.description,\n                category: currentPost.category,\n                postType: currentPost.postType,\n                email: currentPost.email,\n                phone: currentPost.phone,\n                address: currentPost.address,\n                city: currentPost.city,\n                state: currentPost.state,\n                zip: currentPost.zip,\n                website: currentPost.website,\n                postImage: currentPost.postImage,\n                activated: currentPost.activated,\n              }}\n              // !PostImage REQUIRED here so as to not get deleted accidentally.\n              validationSchema={formSchema}\n              onSubmit={(values) => {\n                //console.log(\". . . . . . . . . post update values:\", values);\n                setInProgress(true);\n                props.closeEdit();\n                setSeeDetails(!seeDetails);\n                dispatch(postAction.updatePost(values))\n                  .then(async (result) => {\n                   // console.log(\"create post result:\", result);\n                    // seeDetails(false);\n                    if (result.success) {\n                      //setInProgress(true);\n                      //seeDetails(false);\n                    }\n                    // console.log(\n                    //   \"IT ALL STARTS HERE WITH REFRESH POSTS FOR USER.\"\n                    // );\n                    dispatch(postAction.setStatusGreen()).catch((err) => console.error(err))\n                    props.refresh(); //?\n                  })\n                  .catch((err) => console.log(err));\n                 \n              }}\n            >\n              {(props) => (\n                <Grid container className=\"EditPostCardForm\">\n                  <Grid item xs={12} sm={12}   >\n                    <Grid item xs={12}>\n                      <input\n                      className=\"cardInput\"\n                        placeholder=\"Post Title\"\n                        onChange={props.handleChange(\"title\")}\n                        value={props.values.title}\n                        onBlur={props.handleBlur(\"title\")}\n                         \n                      />\n\n                      <div style={{ color: \"salmon\" }}>\n                        {props.touched.title && props.errors.title}\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <select\n                        className=\"cardSelect\"\n                        value={props.values.postType}\n                        onChange={props.handleChange(\"postType\")}\n                        style={{\n                          border: \"none\",\n                          outline: \"none\",\n                          minWidth: \"90px\",\n                        }}\n                      >\n                        {post_categories.map((item, index) => {\n                          return (\n                            <option key={index} value={index}>\n                              {item}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </Grid>\n\n                    {/* <Grid item xs={12}>\n                      <input\n                        placeholder=\"Description\"\n                        onChange={props.handleChange(\"description\")}\n                        value={props.values.description}\n                        onBlur={props.handleBlur(\"description\")}\n                      />\n                      <div style={{ color: \"salmon\" }}>\n                        {props.touched.description && props.errors.description}\n                      </div>\n                    </Grid> */}\n\n                    <Grid item xs={12}>\n                      <textarea\n                        className=\"cardTextarea\"\n                        placeholder=\"Description\"\n                        onChange={props.handleChange(\"description\")}\n                        value={props.values.description}\n                        onBlur={props.handleBlur(\"description\")}\n                      >\n                        {props.values.description}\n                      </textarea>\n                      <div style={{ color: \"salmon\" }}>\n                        {props.touched.description && props.errors.description}\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                    <select\n                            value={props.values.category}\n                            onChange={props.handleChange(\"category\")}\n                            className=\"appSelect\"\n                          >\n                            {categories.map((item, index) => {\n                              return (\n                                <option key={item._id} value={item.title}>\n                                  {item.title}\n                                </option>\n                              );\n                            })}\n                          </select>\n                      {/* <select\n                        className=\"cardSelect\"\n                        value={props.values.category}\n                        onChange={props.handleChange(\"category\")}\n                      >\n                        {categories.map((item, index) => {\n                          return (\n                            <option key={index} value={index}>\n                              {item}\n                            </option>\n                          );\n                        })}\n                      </select> */}\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <input\n                       className=\"cardInput\"\n                        placeholder=\"Email\"\n                        onChange={props.handleChange(\"email\")}\n                        value={props.values.email}\n                        onBlur={props.handleBlur(\"email\")}\n                      />\n                      <div style={{ color: \"salmon\" }}>\n                        {props.touched.email && props.errors.email}\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <input\n                       className=\"cardInput\"\n                        placeholder=\"Phone\"\n                        onChange={props.handleChange(\"phone\")}\n                        value={props.values.phone}\n                        onBlur={props.handleBlur(\"phone\")}\n                      />\n                      <div style={{ color: \"salmon\" }}>\n                        {props.touched.phone && props.errors.phone}\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <input\n                       className=\"cardInput\"\n                        placeholder=\"Address\"\n                        onChange={props.handleChange(\"address\")}\n                        value={props.values.address}\n                        onBlur={props.handleBlur(\"address\")}\n                      />\n                      <div style={{ color: \"salmon\" }}>\n                        {props.touched.address && props.errors.address}\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <input\n                       className=\"cardInput\"\n                        placeholder=\"City\"\n                        onChange={props.handleChange(\"city\")}\n                        value={props.values.city}\n                        onBlur={props.handleBlur(\"city\")}\n                      />\n                      <div style={{ color: \"salmon\" }}>\n                        {props.touched.city && props.errors.city}\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <select\n                        className=\"cardSelect\"\n                        value={props.values.state}\n                        onChange={props.handleChange(\"state\")}\n                        style={{\n                          border: \"none\",\n                          outline: \"none\",\n                          minWidth: \"90px\",\n                        }}\n                      >\n                        {us_states.map((item, index) => {\n                          return (\n                            <option key={index} value={index}>\n                              {item}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <input\n                       className=\"cardInput\"\n                        placeholder=\"Zip\"\n                        onChange={props.handleChange(\"zip\")}\n                        value={props.values.zip}\n                        onBlur={props.handleBlur(\"zip\")}\n                      />\n                      <div style={{ color: \"salmon\" }}>\n                        {props.touched.zip && props.errors.zip}\n                      </div>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <input\n                       className=\"cardInput\"\n                        placeholder=\"Website\"\n                        onChange={props.handleChange(\"website\")}\n                        value={props.values.website}\n                        onBlur={props.handleBlur(\"website\")}\n                      />\n                      <div style={{ color: \"salmon\" }}>\n                        {props.touched.website && props.errors.website}\n                      </div>\n                    </Grid>\n\n\n\n                    <input\n                      type=\"hidden\"\n                      onChange={() => {}}\n                      value={props.values.postImage}\n                      disabled\n                    />\n                    <input\n                      type=\"hidden\"\n                      onChange={() => {}}\n                      value={user._id}\n                      disabled\n                    />\n\n                    {/* <Grid item xs={12} sm={4}>\n                      <div>\n                        <label className=\"cardLabel\" htmlFor=\"activationStatus\">\n                          Status:\n                        </label>\n\n                        <select\n                          name=\"activationStatus\"\n                          className=\"cardSelect\"\n                          value={props.values.activated}\n                          onChange={props.handleChange(\"activated\")}\n                        >\n                          {activatedOptions.map((item, index) => {\n                            return (\n                              <option key={index} value={index}>\n                                {item}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <p style={{ fontSize: \".6em\" }}>\n                          Will not be seen if deactivated.\n                        </p>\n                      </div>\n                    </Grid> */}\n\n                    {/* UPLOAD AN IMAGE: https://www.youtube.com/watch?v=SAUvlkTDMM4 */}\n                    <Grid container direction=\"row\">\n                      <Grid item xs={10} sm={4}>\n                        <button\n                         className=\"cardButton\"\n                          onClick={props.handleSubmit}\n                          style={{ color: \"green\" ,width:\"90%\",marginRight:\"15px\"}}\n                        >\n                          Update\n                        </button>\n                      </Grid>\n                      <Grid item xs={2} sm={4}>\n                        <AreYouSureModal\n                          data={props.values}\n                          deleteItem={deleteItem}\n                        ></AreYouSureModal>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              )}\n            </Formik>\n\n            {/* //end  part 3*/}\n          </Grid>\n          <Grid item xs={12} sm={1}>\n            <button  className=\"cardButton\" onClick={props.closeEdit} style={{ color: \"orange\" ,width:\"90%\"}}>\n              cancel\n            </button>\n          </Grid>\n        </Grid>\n        <p className=\"appDevNote\">EditPostCard</p>\n      </React.Fragment>\n        }\n    </>\n  );\n};\n\nexport default EditPostCard;\n","import Grid from \"@material-ui/core/Grid\";\nimport Icon from \"@material-ui/core/Icon\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../../App.css\";\nimport { config } from \"../../Constants\";\nimport * as postAction from \"../../redux/actions/postAction\";\nimport EditPostCard from \"./EditPostCard\";\n\nconst formatIsoStringDate = (isoStringDate) => {\n  let sp = \"/\";\n  if (typeof isoStringDate === \"undefined\") {\n    sp = \"/\";\n  }\n  //let today = new Date();\n  let currentDate = new Date(isoStringDate);\n  var dd = currentDate.getDate();\n  var mm = currentDate.getMonth() + 1; //As January is 0.\n  var yyyy = currentDate.getFullYear();\n\n  if (dd < 10) dd = \"0\" + dd;\n  if (mm < 10) mm = \"\" + mm;\n  return mm + sp + dd + sp + yyyy;\n};\n\nconst PostDisplayCard = (props) => {\n  const [seeDetails, setSeeDetails] = useState(false);\n  const [allowEdit, setAllowEdit] = useState(false);\n  //const Kolor = useSelector((state) => state.post.statusColor);\n  const dispatch = useDispatch();\n\n  // const [inProgress, setInProgress] = useState(false);\n  const IMG_URL = config.url.IMG_URL;\n  //console.log(\"PostDisplayCard - props:\", props); //good to here.\n\n  var user = useSelector((state) => state.auth.user);\n  //console.log(\"STATE---------user:\", user);\n  // useEffect(() => {\n  //   setInProgress(inProgress);\n  // }, [inProgress]);\n\n  const initEdit = () => {\n    //console.log(\". . . . . . . .init edit \");\n    dispatch(postAction.setStatusBlue()).catch((err) => console.error(err));\n    setAllowEdit(!allowEdit);\n  };\n  const closeEdit = () => {\n    setAllowEdit(!allowEdit);\n    dispatch(postAction.setStatusGreen()).catch((err) => console.error(err));\n  };\n\n  if (props.post.postImage == \"default\") {\n    props.post.postImage = \"servewerx_your_biz_card_here.png\";//servewerx_level_scale-1.0-h100.png\n  }\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={12} sm={10}>\n        <p className=\"cardTitle\"> {props.post.title}</p>\n      </Grid>\n      <Grid item xs={12} sm={2}>\n        <button\n          onClick={() => {\n            setSeeDetails(!seeDetails);\n          }}\n        >\n          {seeDetails ? \"close\" : \"details\"}\n        </button>\n      </Grid>\n      {seeDetails && (\n        <Grid item xs={12} sm={12} style={{ background: \"#eee\" }}>\n          <Grid container spacing={0} direction=\"row\">\n            <Grid item sm={10}>\n              {!allowEdit && (\n                <Grid\n                  container\n                  direction=\"row\"\n                  align=\"center\"\n                  justify=\"center\"\n                  className=\"cardDetailsContainer\"\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    sm={8}\n                    style={{ textAlign: \"left\", padding: \"1em\" }}\n                  >\n                    <p className=\"cardTitle\">{props.post.title}</p>\n                    <p className=\"cardDescription\">{props.post.description}</p>\n                    <div className=\"cardContactInfo\">\n                      <a\n                        href={\"mailto:\" + props.post.email}\n                        style={{ color: \"#222\", textDecoration: \"none\" }}\n                      >\n                        {props.post.email}{\" \"}\n                        <Icon className=\"cardIcon\">email</Icon>\n                      </a>\n                    </div>\n\n                    <div className=\"cardContactInfo\">\n                      <a\n                        href={\"tel:\" + props.post.phone}\n                        style={{ color: \"#222\", textDecoration: \"none\" }}\n                      >\n                        {props.post.phone}\n                        <Icon className=\"cardIcon\">phone</Icon>\n                      </a>\n                      <p>\n                        Date Created:\n                        {formatIsoStringDate(props.post.dateCreated)}\n                      </p>\n                      {/* <p>Activated:{props.post.activated ? (\"YES\") : (\"NO\")}</p> */}\n                    </div>\n                  </Grid>\n                  <Grid item xs={12} sm={4} className=\"cardImageGrid\">\n                    <img\n                      src={`${IMG_URL}/` + props.post.postImage} //+ props.props.post.postImage\n                      alt=\"img\"\n                      className=\"cardImg\"\n                    />\n\n                    {/* {\n                      props.post.postImage ? \n                      ( <img\n                        src={\n                          `${IMG_URL}/` + props.post.postImage\n                        } //+ props.props.post.postImage\n                        alt=\"img\"\n                      className=\"cardImg\"\n                      />)\n                      :\n                      ( <img\n                        src={\n                          `https://servewerx-space-1.nyc3.digitaloceanspaces.com/servewerx_level_scale-1.0-h100.png` \n                        } //+ props.props.post.postImage\n                        alt=\"img\"\n                      className=\"cardImg\"\n                      />)\n\n                    } */}\n                  </Grid>\n                  <p className=\"appDevNote\">PostDisplayCard</p>\n                </Grid>\n              )}\n            </Grid>\n            <Grid item sm={2}>\n              {!allowEdit && (\n                <button\n                  onClick={() => {\n                    //setAllowEdit(!allowEdit);\n                    initEdit();\n                  }}\n                  style={{ color: \"blue\" }}\n                >\n                  Edit\n                </button>\n              )}\n            </Grid>\n          </Grid>\n          {allowEdit && (\n            <>\n              <EditPostCard\n                data={props.post}\n                closeEdit={closeEdit}\n                refresh={props.refresh}\n              ></EditPostCard>\n            </>\n          )}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default PostDisplayCard;\n","import Grid from \"@material-ui/core/Grid\";\nimport Icon from \"@material-ui/core/Icon\";\n// var zipcodes = require('zipcodes');\nimport haversine from \"haversine-distance\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport * as postAction from \"../../redux/actions/postAction\";\nimport AllSitePostsDisplayCard from \"../cards/AllSitePostsDisplayCard\";\nimport PostDisplayCard from \"../cards/PostDisplayCard\";\n\n/*\nTO GO: SPINNER: \ndeps:\nimport FadeLoader from \"react-spinners/FadeLoader\";\n\nfn:\nlet [loading, setLoading] = useState(false);\nlet [color, setColor] = useState(\"red\");\n\njsx:\n<div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={\"red\"} loading={loading}  size={1} height={4} width={2}   />\n</div>\n*/\n\nconst AllSitePostsPage = (props) => {\n  let [loading, setLoading] = useState(false);\n  let [color, setColor] = useState(\"red\");\n\n  const metersToMiles = (i) => {\n    return i * 0.000621371192;\n  };\n  const milesToMeters = (i) => {\n    return i * 1609.344;\n  };\n  const testZip = () => {\n    const usZips = require(\"us-zips\");\n    console.log(\"zip results:---------------------\");\n    console.log(usZips[\"54301\"]);\n    var zipGeo = usZips[\"47115\"];\n    var zipGeo2 = usZips[\"40202\"];\n    console.log(zipGeo);\n\n    const a = { latitude: zipGeo.latitude, longitude: zipGeo.longitude };\n    const b = { latitude: zipGeo2.latitude, longitude: zipGeo2.longitude };\n\n    console.log(\"haversine results: ----------------------\");\n    console.log(haversine(a, b)); // 714504.18 (in meters)\n    console.log(metersToMiles(haversine(a, b))); //in miles\n  };\n  var auth = useSelector((state) => state.auth.authorized);\n\n  const dispatch = useDispatch();\n\n  // Within Certain Radius\n  const zipWithinRadius = (zip, miles) => {\n    // var arrayOfZips = zipcodes.radius(zip, miles);\n    //  console.log('arrayOfZips Within Radius:',arrayOfZips);\n    // select * from posts where zipcode ( IN arrayOfZips)\n    // db.inventory.find( { qty: { $in: [ 5, 15 ] } } )\n    //////////////////////////////////////////////////\n    // Posts.find( { zipcode: { $in: arrayOfZips } } )\n    ///////////////////////////////////////////////////\n    dispatch(postAction.postsWithinProximity(zip, miles))\n      .then((res) => {\n        console.log(\"result:\", res);\n        setCurrentPosts(res);\n        setHaveCurrentPosts(true);\n        setLoading(false);\n        window.scrollTo(0, 0);\n      })\n\n      .catch((err) => console.log(\"error:\", err));\n  };\n\n  const [currentPosts, setCurrentPosts] = useState([]);\n  const [haveCurrentPosts, setHaveCurrentPosts] = useState(false);\n  const [show, setShow] = useState(false);\n  const [miles, setMiles] = useState('');\n  const [zipcode, setZipcode] = useState('');\n\n  const [sortName, setSortName] = useState(false);\n  const [sortLatest, setSortLatest] = useState(false);\n  const [sortPostType1, setSortPostType1] = useState(false);\n  const [sortPostType2, setSortPostType2] = useState(false);\n   const [sortCategory, setSortCategory] = useState(false);\n\n  const [sortId, setSortId] = useState(false);\n  const [sortZip, setSortZip] = useState(false);\n  const [sortState, setSortState] = useState(false);\n  const [noSort, setNoSort] = useState(true); //true by default\n\n  const [filterKey, setFilterKey] = useState(\"\");\n\n  const searchInputEl = useRef('');\n  const milesInput = useRef('');\n  const zipInput = useRef('');\n  const toggleShow = () => {\n    setShow(!show);\n  };\n  const getDefaultPosts = () => {\n    //Function needed to handle case where search input empty or a space.\n    dispatch(postAction.allSitePosts())\n      .then(async (result) => {\n        console.log(\"ALL POSTS RESULTS FUNCTION:\", result);\n        setCurrentPosts(result);\n        setHaveCurrentPosts(true);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const getFilteredPosts = (key) => {\n    dispatch(postAction.filterPosts(key))\n      .then(async (result) => {\n        console.log(\" --oo--  FILTERED POSTS RESULTS:\", result);\n        setCurrentPosts(result);\n        setHaveCurrentPosts(true);\n        window.scrollTo(0, 0);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    //initial gets all users once.\n    setLoading(true);\n    dispatch(postAction.allSitePosts())\n      .then(async (result) => {\n        console.log(\"ALL POSTS RESULTS USEEFFECT:\", result);\n        setCurrentPosts(result);\n        setHaveCurrentPosts(true);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const sortByTitle = (posts) => {\n    posts\n      .sort((a, b) => (a.title > b.title ? 1 : -1))\n      .map((post, i) => {\n        return <PostDisplayCard key={i} post={post}></PostDisplayCard>;\n\n        // return (\n        //   <AllSitePostsDisplayCard\n        //     key={i}\n        //     post={post}\n        //   ></AllSitePostsDisplayCard>\n        // );\n      });\n  };\n  const clearSortOptions = () => {\n    setSortName(false);\n    setSortLatest(false);\n    setSortPostType1(false);\n    setSortPostType2(false);\n    setSortCategory(false);\n    setNoSort(false);\n  };\n  const setSortOption = (e) => {\n    console.log(e.target.value);\n    const key = e.target.value;\n    clearSortOptions();\n    ////latest,postType1, postType2,\n\n    switch (key) {\n      case \"id\":\n        setSortId(true);\n        break;\n      case \"name\":\n        setSortName(true);\n        break;\n\n      case \"latest\":\n        setSortLatest(true);\n        break;\n      case \"postType1\":\n        setSortPostType1(true);\n        break;\n      case \"postType2\":\n        setSortPostType2(true);\n        break;\n      case \"category\":\n        setSortCategory(true);\n        break;\n      default:\n        setNoSort(true);\n        break;\n    }\n    window.scrollTo(0, 0);\n  };\n\n  const setFilterOption = (e) => {\n    setFilterKey(e.target.value);\n    console.log(\"SETTING FILTER:\");\n    const key = e.target.value;\n\n    if (key === \"\" || key === \" \") {\n      console.log(\"GET DEFAULT DATA BACK...\");\n      getDefaultPosts();\n    } else {\n      getFilteredPosts(key);\n    }\n  };\n\n  const displayPosts = () => {\n    if (haveCurrentPosts) {\n      if (sortName) {\n        return currentPosts\n          .sort((a, b) => (a.title > b.title ? 1 : -1))\n          .map((post, i) => {\n            if (post.dateCreated === \"2021-04-21T20:57:36.385Z\") {\n              return <>EXPIRED</>;\n            } else {\n              return (\n                // <PostDisplayCard key={i} post={post} ></PostDisplayCard>\n                <AllSitePostsDisplayCard\n                  key={i}\n                  post={post}\n                ></AllSitePostsDisplayCard>\n              );\n            }\n          });\n      }\n      if (sortLatest) {\n        return currentPosts\n          .sort((a, b) => (a.lastUpdated > b.lastUpdated ? -1 : 1))\n          .map((post, i) => {\n            return (\n              <AllSitePostsDisplayCard\n                key={i}\n                post={post}\n              ></AllSitePostsDisplayCard>\n            );\n          });\n      }\n      if (sortPostType1) {\n        return currentPosts\n          .sort((a, b) => (a.postType > b.postType ? 1 : -1))\n          .map((post, i) => {\n            return (\n              <AllSitePostsDisplayCard\n                key={i}\n                post={post}\n              ></AllSitePostsDisplayCard>\n            );\n          });\n      }\n      if (sortPostType2) {\n        return currentPosts\n          .sort((a, b) => (a.postType > b.postType ? -1 : 1))\n          .map((post, i) => {\n            return (\n              <AllSitePostsDisplayCard\n                key={i}\n                post={post}\n              ></AllSitePostsDisplayCard>\n            );\n          });\n      }\n      if (sortCategory) {\n        return currentPosts\n          .sort((a, b) => (a.category > b.category ? 1 : -1))\n          .map((post, i) => {\n            return (\n              <AllSitePostsDisplayCard\n                key={i}\n                post={post}\n              ></AllSitePostsDisplayCard>\n            );\n          });\n      }\n\n      if (noSort) {\n        return currentPosts.map((post, i) => {\n          return (\n            <AllSitePostsDisplayCard\n              key={i}\n              post={post}\n            ></AllSitePostsDisplayCard>\n          );\n        });\n      }\n    }\n  };\n  const resetAll = async () => {\n    console.log(\"resetting all ...\");\n    getDefaultPosts();\n    searchInputEl.current.value = \"\";\n    searchInputEl.current.focus();\n    //  setNoSort(true);\n    // displayPosts()\n  };\n\n  const resetProximity = async () => {\n    console.log(\"resetting proximity ...\");\n    getDefaultPosts();\n    milesInput.current.value = \"\";\n    zipInput.current.focus();\n    //  setNoSort(true);\n    // displayPosts()\n  };\n  // if (!auth) {\n  //   return <div>not authorized.</div>;\n  // }\n\n  const handleZip = (e) => {\n    console.log(\"e.target:\", e.target);\n    setZipcode(e.target.value);\n  };\n\n  const handleMiles = (e) => {\n    console.log(\"e.target:\", e.target);\n    setMiles(e.target.value);\n  };\n\n  const handleProximityForm = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    console.log(\"handle proximity form....\");\n    console.log(miles + \"from \" + zipcode);\n    zipWithinRadius(zipcode, miles);\n  };\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      className=\"main-component-container component-background-image\"\n    >\n      <div style={{ position: \"absolute\", bottom: \"25%\", left: \"50%\" }}>\n        <FadeLoader\n          color={\"red\"}\n          loading={loading}\n          size={1}\n          height={4}\n          width={2}\n        />\n      </div>\n      <Grid\n        container\n        spacing={0}\n        style={{\n          position: \"fixed\",\n          top: \"60px\",\n          left: \"0px\",\n          right: \"0px\",\n          zIndex: \"100\",\n          \n          paddingTop: \"1em\",\n          fontSize: \".7em\",\n          boxShadow: \"1px 1px 4px #333\",\n        }}\n        className=\"filter-grid\"\n      >\n        <Grid container alignItems=\"center\">\n        <Grid item xs={12} sm={1}>\n        <button\n          onClick={toggleShow}\n          style={{ cursor: \"button\", fontSize: \"1.2em\" }}\n        >\n          {show ? \"Hide Filter\" : \"Filter\"}\n        </button>\n        </Grid>\n        {show && (\n          <>\n            \n              <Grid item xs={12} sm={4}  >\n                <label className=\"filterLabel\" >Type:</label>\n                <input\n                  type=\"radio\"\n                  id=\"name\"\n                  name=\"sortOption\"\n                  value=\"name\"\n                  onChange={setSortOption}\n                  className=\"radioInput\"\n                />\n                <label htmlFor=\"name\" className=\"radioLabel\">\n                  Title\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"latest\"\n                  name=\"sortOption\"\n                  value=\"latest\"\n                  onChange={setSortOption}\n                  className=\"radioInput\"\n                />\n                <label htmlFor=\"latest\" className=\"radioLabel\">\n                  Latest\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"postType1\"\n                  name=\"sortOption\"\n                  value=\"postType1\"\n                  onChange={setSortOption}\n                  className=\"radioInput\"\n                />\n                <label htmlFor=\"postType1\" className=\"radioLabel\">\n                  Looking For Work\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"postType2\"\n                  name=\"sortOption\"\n                  value=\"postType2\"\n                  onChange={setSortOption}\n                  className=\"radioInput\"\n                />\n                <label htmlFor=\"postType2\" className=\"radioLabel\">\n                  Hiring\n                </label>\n                {/* \n                //BUG: rapid flashes in UI possibly multiple refreshes...due to loop in call to userprofile to set user...\n                */}\n                <input\n                  type=\"radio\"\n                  id=\"category\"\n                  name=\"sortOption\"\n                  value=\"category\"\n                  onChange={setSortOption}\n                  className=\"radioInput\"\n\n                />\n                <label htmlFor=\"category\" className=\"radioLabel\">Category</label> \n              </Grid>\n\n              <Grid item item xs={12} sm={3}>\n                <label className=\"filterLabel\" >Keyword:</label>\n                <input\n                  className=\"appInputAuto\"\n                  type=\"text\"\n                  id=\"filterKey\"\n                  name=\"filterKey\"\n                  onBlur={setFilterOption}\n                  ref={searchInputEl}\n                />\n                <button className=\" filterButton\" style={{ cursor: \"button\" }}>\n                  <Icon style={{ fontSize: \"1em\" }}>search</Icon>\n                </button>\n                <button\n                  onClick={resetAll}\n                  style={{ cursor: \"button\" }}\n                  className=\" filterButton\"\n                >\n                  <Icon style={{ fontSize: \"1em\" }}>refresh</Icon>\n                </button>\n              </Grid>\n\n              <Grid item xs={12} sm={3}    >\n                <form style={{ fontSize: \"1em\" }}>\n                  <label className=\"filterLabel\" >Location:</label>\n                  <input\n                    type=\"number\"\n                    className=\"appTinyInput\"\n                    placeholder=\"miles\"\n                    onChange={handleMiles}\n                    value={miles}\n                    name=\"miles\"\n                    ref={milesInput}\n                  ></input>\n                  <label> from </label>\n                  <input\n                    type=\"text\"\n                    className=\"appTinyInput\"\n                    placeholder=\"zipcode\"\n                    onChange={handleZip}\n                    name=\"zipcode\"\n                    value={zipcode}\n                    ref={zipInput}\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"filterButton\"\n                    onClick={handleProximityForm}\n                    style={{ cursor: \"button\" }}\n                  >\n                    find\n                  </button>\n\n                  <button onClick={resetProximity} className=\"filterButton\">\n                    <Icon style={{ fontSize: \"1em\" }}>refresh</Icon>\n                  </button>\n                </form>\n              </Grid>\n           \n          </>\n        )}\n         </Grid>\n      </Grid>\n\n      <Grid item xs={12} style={{ marginTop: \"200px\" }}>\n        {haveCurrentPosts && displayPosts()}\n      </Grid>\n\n      <p className=\"appDevNote\">AllSitePostsPage</p>\n    </Grid>\n  );\n};\n\nexport default AllSitePostsPage;\n","import Grid from \"@material-ui/core/Grid\";\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as yup from \"yup\";\n// import forteworks.com from \"../components/forteworks.com\";\nimport \"../../App.css\";\nimport { config } from \"../../Constants\";\nimport * as authAction from \"../../redux/actions/authAction\";\nimport * as postAction from \"../../redux/actions/postAction\";\n\nconst IMG_URL = config.url.IMG_URL;\n\nconst formSchema = yup.object({\n  title: yup.string().required().min(3),\n  email: yup.string().email().required(),\n  phone: yup.string().min(10),\n  zip: yup.string().max(5)\n});\n\nconst PostCreateCard = (props) => {\n  const dispatch = useDispatch();\n  const [seeDetails, setSeeDetails] = useState(false);\n  const [inProgress, setInProgress] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [submitComplete, setSumbitComplete] = useState(false);\n  const [currentPost, setCurrentPost] = useState(false);\n\n  var user = useSelector((state) => state.auth.user);\n  var post = useSelector((state) => state.post);\n  var us_states = useSelector((state) => state.auth.usstates);\n  //var categories = useSelector((state) => state.post.categories);\n  var haveCategories = useSelector((state) => state.auth.haveCategories);\n\n  // useEffect(() => {\n  //  // console.log(\"post data changed:\", post);\n  // }, [post]);\n\n  useEffect(() => {\n    //get initial categories\n    dispatch(authAction.getCategories())\n      .then((results) => {\n        //console.log(\"category results:\", results);\n        \n          //var sortedCategories = []\n          // return currentPosts\n          //   .sort((a, b) => (a.category > b.category ? 1 : -1))\n          //   .map((post, i) => {\n          //     return (\n          //       <AllSitePostsDisplayCard\n          //         key={i}\n          //         post={post}\n          //       ></AllSitePostsDisplayCard>\n          //     );\n          //   });\n        const sortedResults = results.sort((a, b) => (a.title > b.title ? 1 : -1))\n        //sort alpha here?\n        setCategories(sortedResults);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  //console.log(\"STATE---------user:\",user)\n  useEffect(() => {\n    setInProgress(inProgress);\n  }, [inProgress]);\n\n  const initEdit = () => {\n    //console.log(\". . . . . . . .init edit \");\n    dispatch(postAction.setStatusBlue()).catch((err) => console.error(err));\n    //setAllowEdit(!allowEdit);\n    setSeeDetails(!seeDetails);\n  };\n  const closeEdit = () => {\n    //setAllowEdit(!allowEdit);\n    setSeeDetails(!seeDetails);\n    dispatch(postAction.setStatusGreen()).catch((err) => console.error(err));\n  };\n\n  const post_types = [\n    \"select one\",\n    \"Looking for Work\",\n    \"Looking to Hire\",\n    \"Open for Business\",\n  ];\n  return (\n    <React.Fragment>\n      <>\n        {!post.postStepOne && haveCategories && (\n          <div className=\"card-plain\">\n            <Grid\n              container\n              spacing={1}\n              align=\"center\"\n              justify=\"center\"\n              direction=\"row\"\n            >\n              <Grid item xs={12}>\n                {/* //FORM AND REDUX  part 3 JSX*/}\n                <Formik\n                  initialValues={{\n                    userId: user.data._id,\n                    title: \"\",\n                    description: \"\",\n                    postType: \"\",\n                    category: \"\",\n                    email: user.data.email,\n                    phone: user.data.phone,\n                    address: user.data.address,\n                    city: user.data.city,\n                    state: user.data.state,\n                    zip: user.data.zip,\n                    website: user.data.website,\n                    activated: \"1\",\n                    //postImage: user.data.profileImage\n                  }}\n                  // !PostImage REQUIRED here so as to not get deleted accidentally.\n                  validationSchema={formSchema}\n                  onSubmit={(values) => {\n                    //(\"values:\", values);\n                    setInProgress(true);\n                    setSeeDetails(!seeDetails);\n                    dispatch(postAction.createPost(values))\n                      .then(async (result) => {\n                        //console.log(\"create post result:\", result); //good.\n                        await setCurrentPost(result);\n                        await setSumbitComplete(true);\n\n                        dispatch(postAction.setStatusGreen()).catch((err) =>\n                          console.error(err)\n                        );\n                      })\n                      .catch((err) => console.log(err));\n                  }}\n                >\n                  {(props) => (\n                    <Grid container className=\"PostCreateCardForm\">\n                      <Grid item xs={12} sm={12}>\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">\n                            Title ( ie. The name of your service.)\n                          </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Residential Plumbing Services\"\n                            onChange={props.handleChange(\"title\")}\n                            value={props.values.title}\n                            onBlur={props.handleBlur(\"title\")}\n                          />\n\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.title && props.errors.title}\n                          </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">\n                            Type ( ie. looking for work, looking to hire, etc.){\" \"}\n                          </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <select\n                            className=\"appSelect\"\n                            value={props.values.postType}\n                            onChange={props.handleChange(\"postType\")}\n                          >\n                            {post_types.map((item, index) => {\n                              return (\n                                <option key={index} value={index}>\n                                  {item}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">\n                            Description ( Provide more detail on your services ,\n                            or the job you want)\n                          </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"No job too big or too small, etc...\"\n                            onChange={props.handleChange(\"description\")}\n                            value={props.values.description}\n                            onBlur={props.handleBlur(\"description\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.description &&\n                              props.errors.description}\n                          </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">\n                            Category (Which industry is your service generally\n                            described as...)\n                          </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <select\n                            value={props.values.category}\n                            onChange={props.handleChange(\"category\")}\n                            className=\"appSelect\"\n                          >\n                            {categories.map((item, index) => {\n                              return (\n                                <option key={item._id} value={item.title}>\n                                  {item.title}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">Email</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Email\"\n                            onChange={props.handleChange(\"email\")}\n                            value={props.values.email}\n                            onBlur={props.handleBlur(\"email\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.email && props.errors.email}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">Phone</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Phone\"\n                            onChange={props.handleChange(\"phone\")}\n                            value={props.values.phone}\n                            onBlur={props.handleBlur(\"phone\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.phone && props.errors.phone}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">Address</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Address\"\n                            onChange={props.handleChange(\"address\")}\n                            value={props.values.address}\n                            onBlur={props.handleBlur(\"address\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.address && props.errors.address}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">City</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"City\"\n                            onChange={props.handleChange(\"city\")}\n                            value={props.values.city}\n                            onBlur={props.handleBlur(\"city\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.city && props.errors.city}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">State</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <select\n                            value={props.values.state}\n                            onChange={props.handleChange(\"state\")}\n                            className=\"appSelect\"\n                          >\n                            {us_states.map((item, index) => {\n                              return (\n                                <option key={index} value={index}>\n                                  {item}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        </Grid>\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">\n                            Zip <span style={{color:\"green\"}}>** </span><span style={{fontSize:\".8em\",color:\"#444\"}}>Important for people to find you.</span>\n                          </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Zip\"\n                            onChange={props.handleChange(\"zip\")}\n                            value={props.values.zip}\n                            onBlur={props.handleBlur(\"zip\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.zip && props.errors.zip}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} className=\"cardLabelContainer\">\n                          <label className=\"cardLabel\">Website</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Website\"\n                            onChange={props.handleChange(\"website\")}\n                            value={props.values.website}\n                            onBlur={props.handleBlur(\"website\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.website && props.errors.website}\n                          </div>\n                        </Grid>\n                        {/* <input\n                             type=\"hidden\"\n                            onChange={()=>{}}\n                            value={props.values.postImage}\n                            disabled\n                          /> */}\n                        <input\n                          type=\"hidden\"\n                          onChange={() => {}}\n                          value={user._id}\n                          disabled\n                        />\n                      \n\n                        {/* UPLOAD AN IMAGE: https://www.youtube.com/watch?v=SAUvlkTDMM4 */}\n                        <Grid item xs={12}>\n                          <button onClick={props.handleSubmit} style={{background:\"orange\",color:\"#fff\"}}>\n                            Continue to Step 2\n                          </button>\n                          <button\n                            onClick={() => {\n                              dispatch(\n                                postAction.cancelPost(currentPost._id)\n                              ).catch((err) => console.error(err));\n                            }}\n                            style={{ color: \"blue\" }}\n                          >\n                            CANCEL\n                          </button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  )}\n                </Formik>\n\n                {/* //end  part 3*/}\n              </Grid>\n              <p className=\"appDevNote\">PostCreateCard</p>\n            </Grid>\n          </div>\n        )}\n      </>\n    </React.Fragment>\n  );\n};\n\nexport default PostCreateCard;\n","//THANKS TO: https://stackoverflow.com/questions/65176026/uploading-image-from-react-frontend-to-express-backend-and-displaying-it-back-in\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { config } from \"../../Constants\";\nimport * as postAction from \"../../redux/actions/postAction\";\n\n/*\nTO GO: SPINNER: \ndeps:\nimport FadeLoader from \"react-spinners/FadeLoader\";\n\nfn:\nlet [loading, setLoading] = useState(false);\nlet [color, setColor] = useState(\"red\");\n\njsx:\n<div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={\"red\"} loading={loading}  size={1} height={4} width={2}   />\n</div>\n*/\n\nconst PostImageForm = (props) => {\n\n\n\n  let [loading, setLoading] = useState(false);\nconst [fileSize,setFileSize] = useState(0);\n  \n  const dispatch = useDispatch();\n   //console.log(\"PostImageForm PROPS: \", props);\n\n\n\n  const [file, setFile] = useState(null);\n  // const [imgFile, setImgFile] = useState(null);\n  //const [id, setId] = useState(props.props.user._id);\n  var user = useSelector((state) => state.auth.user);\n  const handleFileChange = (event) => {\n    setFile(event.target.files);\n    let file_size = event.target.files[0].size;\n    //or if you like to have name and type\n    let file_name = event.target.files[0].name;\n    let file_type = event.target.files[0].type;\n\n    if(event.target.files[0].size > 5000000){\n      alert('file size exceeds 5 MB')\n      //event.target.files.filter(file => file.size <= 1000000);\n    }\n    setFileSize(file_size)\n   // console.log('file_name:file_type:file_size:',file_name,\":\",file_type,\":\",file_size)\n    //console.log(file);\n  };\n\n   \n\n  const API_URL = config.url.API_URL;\n  const IMG_URL = config.url.IMG_URL;\n\n  const submitWithNoImage = async (event) => {\n    event.preventDefault();\n    setLoading(true)\n    const currentPost = props.props.post.data;\n    currentPost.postImage = \"default\";\n    const values = currentPost\n    console.log('values to update the post with...',values)\n    dispatch(postAction.updateCreatingPost(values))\n      .then(async (result) => {\n       // console.log('update post result:',result)\n        if (result.success) {\n          //code\n         // console.log('success response ')\n\n        }\n       // console.log('success or fail dispatch response ?! ')\n        setLoading(false);\n        //props.props.refresh();\n        \n\n      })\n      .catch((err) => console.log(err));\n\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true)\n    if (!file) {\n      return false;\n    }\n    if(fileSize > 5000000){\n      alert('Choose a file less than 5 MB.')\n      setLoading(false);\n      return false;\n    }\n    const data = new FormData();\n    //console.log('PROPS:',props);\n    //console.log('PROPS PROPS:',props.props);\n    const currentPost = props.props.post.data; // AS OPPOSED TO : props.props.post.post ??? \n    data.append(\"id\", currentPost.id);//props.props 2x UNDEFINED ? id vs _id \n    \n    //POST IMAGE FORM \n   // TROUBLE SHOOTING HERE: WHY? is there a props.props.post.post SOMETIMES and a props.props.post.data OTHERTIMES ? \n   /// FIX THIS SHOULD BE THE SOLUTION... had not implemented the updateCreatingPost yet...see if it helps. \n   \n    for (var x = 0; x < file.length; x++) {\n      data.append(\"file\", file[x]);\n    }\n    //console.log(\"DATA getting sent to API: data:\",data)\n    //NOT USING THE REDUX ACTIONS AND REDUCERS: \n    axios.post(`${API_URL}/uploadPostImage`, data).then((res) => {\n     // console.log('post image upload results: ',res)\n      const postImage = res.data;\n      currentPost.postImage = postImage;\n      // const values = user.data;\n      const values = currentPost\n     // console.log('values to update the post with...',values)\n      dispatch(postAction.updateCreatingPost(values))\n        .then(async (result) => {\n         // console.log('update post result:',result)\n          if (result.success) {\n            //code\n           // console.log('success response ')\n\n          }\n          //console.log('success or fail dispatch response ?! ')\n          setLoading(false);\n          //props.props.refresh();\n        })\n        .catch((err) => console.log(err));\n    });\n  };\n  // {!props.props.post && \n  //   return(\n  //   <p>add an image after you create your post.</p>\n  //   )\n  // }\n  \n  return (\n    \n    <Grid\n      container\n      spacing={0}\n      align=\"center\"\n      justify=\"center\"\n      direction=\"column\"\n    >\n      <div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={\"red\"} loading={loading}  size={1} height={4} width={2}   />\n</div>\n      <form name=\"fileinfo\" encType=\"multipart/form-data\">\n        <Grid xs={12}>\n        \n\n          {/* {props.props.post &&\n            <img\n              src={`${IMG_URL}/` + props.props.post.postImage}\n              alt=\"img\"\n              style={{ height: \"200px\", width: \"auto\", borderRadius: \"15px\" }}\n            />\n          } */}\n        </Grid>\n\n        <Grid xs={12}>\n          <input\n            name=\"postImage\"\n            type=\"file\"\n            id=\"file\"\n            accept=\".jpg , .png\"\n            multiple\n            onChange={handleFileChange}\n            style={{ outline: \"none\", border: \"none\" }}\n          />\n        </Grid>\n        <Grid xs={12}>\n          <p>Max Image Size: 5 MB</p>\n          <button className=\"btn btn-primary mt-3\" onClick={handleSubmit}>\n            Save and Continue\n          </button>\n          <button className=\"btn btn-primary mt-3\" onClick={submitWithNoImage}>\n            No Image and Continue\n          </button>\n          \n        </Grid>\n      </form>\n      <p className=\"appDevNote\" >PostImageForm</p>\n\n    </Grid>\n  );\n};\n\nexport default PostImageForm;\n","import { CardElement } from '@stripe/react-stripe-js';\nimport React from 'react';\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      'color': '#32325d',\n      'fontFamily': '\"Helvetica Neue\", Helvetica, sans-serif',\n      'fontSmoothing': 'antialiased',\n      'fontSize': '16px',\n      '::placeholder': {\n        color: '#aab7c4',\n      },\n    },\n    invalid: {\n      color: '#fa755a',\n      iconColor: '#fa755a',\n    },\n  },\n};\n\nexport default function CardInput() {\n  return (\n    <CardElement options={CARD_ELEMENT_OPTIONS} />\n  );\n}\n","\nimport { CircularProgress } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport * as yup from \"yup\";\nimport { config } from '../../Constants';\nimport * as postAction from \"../../redux/actions/postAction\";\nimport CardInput from '../components/CardInput';\nimport Home from \"../Home\";\n\n\n\n/*\nTO GO: SPINNER: \ndeps:\nimport FadeLoader from \"react-spinners/FadeLoader\";\n\nfn:\nlet [loading, setLoading] = useState(false);\nlet [color, setColor] = useState(\"red\");\n\njsx:\n<div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={\"red\"} loading={loading}  size={1} height={4} width={2}   />\n</div>\n*/\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 500,\n    margin: '5vh auto',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'flex-start',\n  },\n  div: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'flex-start',\n    justifyContent: 'space-between',\n  },\n  button: {\n    margin: '2em auto 1em',\n  },\n});\n\n\nconst formSchema = yup.object({\n  fullName: yup.string().required().min(3),\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n});\n//end  part 1\n\nfunction ButtonComponent(props) {\n  const { onClick, loading } = props;\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={onClick}\n      disabled={loading}\n      style={{ marginTop: \"15px\", marginBottom: \"15px\" }}\n    >\n      {loading && <CircularProgress size={14} />}\n      {!loading && \"Register\"}\n    </Button>\n  );\n}\n\n\nfunction PayPage(props) {\n  console.log('payPage props:',props)\n  // if pay page props user id = me \"607da64cdfa3380004aceabf\" THEN post without pay. \n  // props.currentPost.userId = \"607da64cdfa3380004aceabf\" THEN ...\n  const [inProgress, setInProgress] = useState(false);\n  console.log(\"inProgress:\", inProgress);\n  useEffect(() => {\n    setInProgress(inProgress);\n  }, [inProgress]);\n\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles();\n  const { ...rest } = props;\n  //live\n//const API_URL = \"https://arcane-eyrie-05882.herokuapp.com\"\n//local \n//const API_URL = \"http://localhost:4000\"\nconst API_URL = config.url.API_URL\n\n  //FORM AND REDUX  part 2: default export function\n  const dispatch = useDispatch();\n\n  //end  part 2\n\n  // State\n  const [email, setEmail] = useState('');\n  const [paid,setPaid] = useState(false); \n  const stripe = useStripe();\n  const elements = useElements();\n\n    if(props.currentPost.userId = \"607da64cdfa3380004aceabf\"){\n      dispatch(postAction.acceptPost(props.currentPost._id))\n      .then((res) => {\n        //console.log('accept post result: res:',res)\n        setLoading(false);\n      })\n      .catch((err) => console.error(err))\n    }\n\n\n  const handleSubmitPay = async (event) => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setLoading(true)\n    const res = await axios.post(`${API_URL}/pay`, {email: email});\n\n    const clientSecret = res.data['client_secret'];\n\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email: email,\n        },\n      },\n    });\n\n    if (result.error) {\n      // Show error to your customer (e.g., insufficient funds)\n      // nos such payment_intent: 'pi_1IkbF1KxNNqNmAYU95kHMw3s'\n      console.log(result.error.message);\n    } else {\n      // The payment has been processed!\n      if (result.paymentIntent.status === 'succeeded') {\n        console.log('Money is in the bank! 000');\n        setPaid(true)\n        dispatch(postAction.acceptPost(props.currentPost._id))\n        .then((res) => {\n         // console.log('accept post result: res:',res)\n          alert('You Created A Post!')\n          setLoading(false);\n        })\n        .catch((err) => console.error(err))\n        // Show a success message to your customer\n        // There's a risk of the customer closing the window before callback\n        // execution. Set up a webhook or plugin to listen for the\n        // payment_intent.succeeded event that handles any business critical\n        // post-payment actions.\n      }\n    }\n    \n  };\n\n\n  const handleSubmitSub = async (event) => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const result = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        email: email,\n      },\n    });\n\n    if (result.error) {\n      console.log(result.error.message);\n    } else {\n      const res = await axios.post(`${API_URL}/sub`, {'payment_method': result.paymentMethod.id, 'email': email});\n      // eslint-disable-next-line camelcase\n      const {client_secret, status} = res.data;\n\n      if (status === 'requires_action') {\n        stripe.confirmCardPayment(client_secret).then(function(result) {\n          if (result.error) {\n            console.log('There was an issue!');\n            console.log(result.error);\n            // Display error message in your UI.\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\n          } else {\n            console.log('You got the money 1!');\n            // Show a success message to your customer\n            setPaid(true)\n                dispatch(postAction.acceptPost(props.currentPost._id))\n                     .then((res) => {\n                       //console.log('accept post result: res:',res)\n\n                     })\n                     .catch((err) => console.error(err))\n          }\n        });\n      } else {\n        console.log('You got the money 2!');\n        // No additional information was needed\n        // Show a success message to your customer\n        setPaid(true)\n        dispatch(postAction.acceptPost(props.currentPost._id))\n        .then((res) => {\n          //console.log('accept post result: res:',res)\n\n        })\n        .catch((err) => console.error(err))\n      }\n    }\n  };\n\nif (!inProgress) {\n  return (\n    <>\n    { !paid && \n      <Card className={classes.root}>\n        <div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={\"red\"} loading={loading}  size={1} height={4} width={2}   />\n</div>\n      <CardContent className={classes.content}>\n        <TextField\n          label='Email'\n          id='outlined-email-input'\n          helperText={`Email you'll recive updates and receipts on`}\n          margin='normal'\n          variant='outlined'\n          type='email'\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          fullWidth\n        />\n        <CardInput />\n        <div className={classes.div}>\n          <p>One Post $1.00 per month starting on date submitted.</p>\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleSubmitPay}>\n            Pay\n          </Button>\n          {/* <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleSubmitSub}>\n            Subscription\n          </Button> */}\n        </div>\n      </CardContent>\n    </Card>\n\n    } \n    { paid && \n\n    <><h1>NOTIFY THE USER OF SUCCESS {props.currentPost.id}</h1></>\n    // <>\n    //   <h1>Welcome!</h1>\n    //   <p>Now you just need to create your password.</p>\n    //   <React.Fragment>\n    //     <Grid\n    //       container\n    //       spacing={0}\n    //       align=\"center\"\n    //       justify=\"center\"\n    //       direction=\"column\"\n    //     >\n    //       <Paper\n    //         style={{\n    //           backgroundImage: `url(${logo})`,\n    //           backgroundSize: \"cover\",\n    //           height: \"400px\",\n    //         }}\n    //       >\n    //         <Grid item xs={12} sm={6} style={{ marginTop: \"15px\" }}>\n    //           {/* //FORM AND REDUX  part 3 JSX*/}\n    //           <Formik\n    //             initialValues={{\n    //               fullName: \"\",\n    //               email: email,\n    //               password: \"\",\n    //             }}\n    //             validationSchema={formSchema}\n    //             onSubmit={(values) => {\n    //               console.log(\"values:\", values);\n    //               setInProgress(true);\n    //               setLoading(true);\n    //               dispatch(authAction.registerUser(values))\n    //                 .then(async (result) => {\n    //                   console.log(\"register result:\", result);\n    //                   localStorage.setItem(\"forteworksToken\", result.token);\n    //                   localStorage.setItem(\"registerToken\", result.token);\n    //                   setTimeout(() => setLoading(false), 3000);\n    //                   if (result.success) {\n    //                     setInProgress(true);\n    //                     //setLoading(false)\n    //                   }\n    //                 })\n    //                 .catch((err) => console.log(err));\n    //             }}\n    //           >\n    //             {(props) => (\n    //               <Card>\n    //                 <div>\n    //                   <div style={{ textAlign: \"center\" }}>\n    //                     <input\n    //                       style={{\n    //                         marginTop: \"15px\",\n    //                         border: \"none\",\n    //                         outline: \"none\",\n    //                         borderBottom: \"solid 1px #ddd\",\n    //                         padding: \"10px\",\n    //                       }}\n    //                       placeholder=\"Business Name or User Name\"\n    //                       onChange={props.handleChange(\"fullName\")}\n    //                       value={props.values.fullName}\n    //                       onBlur={props.handleBlur(\"fullName\")}\n    //                     />\n    //                     <div style={{ color: \"salmon\" }}>\n    //                       {props.touched.fullName && props.errors.fullName}\n    //                     </div>\n    //                     <input\n    //                       style={{\n    //                         marginTop: \"15px\",\n    //                         border: \"none\",\n    //                         outline: \"none\",\n    //                         borderBottom: \"solid 1px #ddd\",\n    //                         padding: \"10px\",\n    //                       }}\n    //                       placeholder=\"Email\"\n    //                       onChange={props.handleChange(\"email\")}\n    //                       value={props.values.email}\n    //                       onBlur={props.handleBlur(\"email\")}\n    //                     />\n    //                     <div style={{ color: \"salmon\" }}>\n    //                       {props.touched.email && props.errors.email}\n    //                     </div>\n    //                     <input\n    //                       style={{\n    //                         marginTop: \"15px\",\n    //                         border: \"none\",\n    //                         outline: \"none\",\n    //                         borderBottom: \"solid 1px #ddd\",\n    //                         padding: \"10px\",\n    //                       }}\n    //                       placeholder=\"Password\"\n    //                       onChange={props.handleChange(\"password\")}\n    //                       value={props.values.password}\n    //                       onBlur={props.handleBlur(\"password\")}\n    //                     />\n    //                     <div style={{ color: \"salmon\" }}>\n    //                       {props.touched.password && props.errors.password}\n    //                     </div>\n\n    //                     <ButtonComponent\n    //                       onClick={props.handleSubmit}\n    //                       loading={loading}\n    //                     />\n    //                   </div>\n    //                 </div>\n    //               </Card>\n    //             )}\n    //           </Formik>\n             \n\n    //           {/* //end  part 3*/}\n    //         </Grid>\n    //       </Paper>\n    //     </Grid>\n       \n    //   </React.Fragment>\n    //   </>\n      \n    }\n    </>\n   \n  );\n} else {\n  return (\n    <Router>\n    <Route  path=\"/register\" component={Home} />\n  </Router>\n  )\n}\n}\n\nexport default PayPage;\n","import Grid from \"@material-ui/core/Grid\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../../App.css\";\nimport { config } from \"../../Constants\";\nimport * as postAction from \"../../redux/actions/postAction\";\nimport PayPage from '../pages/PayPage';\n\nconst stripePromise = loadStripe(\"pk_live_c03o8lC0VMl6y5eBpZ1eov45\");\n\nconst CreatePostDisplayCard = (props) => {\n\n  // const [seeDetails, setSeeDetails] = useState(false);\n  const [readyToComplete, setAllowEdit] = useState(false);\n   //const Kolor = useSelector((state) => state.post.statusColor);\n  const dispatch = useDispatch();\n\n  const [beginPay, setBeginPay] = useState(false);\n\n  // const [inProgress, setInProgress] = useState(false);\n  const IMG_URL = config.url.IMG_URL;\n  var currentPost = {}\n  //console.log(\"IMG_URL:\", IMG_URL);\n  var user = useSelector((state) => state.auth.user);\n\n try {\n  //console.log(\"CreatePostDisplayCard - props:\", props); //good to here.\n  currentPost = props.props.post.post\n  \n } catch (error) {\n   console.log('error:',error)\n   return (\n     <div>EPIC FAIL</div>\n   )\n }\n\n  //console.log(\"STATE---------user:\", user);\n  // useEffect(() => {\n  //   setInProgress(inProgress);\n  // }, [inProgress]); post.postStepThree && \n\n  const initEdit = () => {\n    //console.log('. . . . . . . .init edit ')\n    dispatch(postAction.setStatusBlue()).catch((err) => console.error(err))\n    setAllowEdit(!readyToComplete);\n  }\n  const closeEdit = () => {\n    setAllowEdit(!readyToComplete);\n    dispatch(postAction.setStatusGreen()).catch((err) => console.error(err))\n\n  };\n\n  return (\n    <Grid container spacing={0}>\n            \n\n      <Grid item xs={12} sm={10}>\n        {props.postStepThree && \n        \n        <p className=\"cardTitle\"> {currentPost && currentPost.title}</p>\n        }\n      </Grid>\n      <Grid item xs={12} sm={2}>\n       \n      </Grid>\n      {true &&   (\n        <Grid item xs={12} sm={12} style={{ background: \"#eee\" }}>\n          <Grid container spacing={0} direction=\"row\">\n            <Grid item sm={10}>\n              {!readyToComplete && (\n                <Grid\n                  container\n                  direction=\"row\"\n                  align=\"center\"\n                  justify=\"center\"\n                  className=\"cardDetailsContainer\"\n                   \n                >\n\n                  <Grid item xs={12} sm={8} style={{textAlign:\"left\",padding:\"1em\"}}>\n                    <p className=\"cardTitle\">{currentPost.title}</p>\n                    <p className=\"cardDescription\">{currentPost.description}</p>\n                    <div className=\"cardContactInfo\">\n                      <a\n                        href={\"mailto:\" + currentPost.email}\n                        style={{ color: \"#222\", textDecoration: \"none\" }}\n                      >\n                        {currentPost.email}{\" \"}\n                        <Icon className=\"cardIcon\"  >email</Icon>\n                      </a>\n                    </div>\n\n                    <div className=\"cardContactInfo\">\n                      <a\n                        href={\"tel:\" + currentPost.phone}\n                        style={{ color: \"#222\", textDecoration: \"none\" }}\n                      >\n                        {currentPost.phone}\n                        <Icon className=\"cardIcon\" >phone</Icon>\n                      </a>\n                    </div>\n                  </Grid>\n                  <Grid item xs={12} sm={4} className=\"cardImageGrid\" >\n                    <img\n                      src={\n                        `${IMG_URL}/` + currentPost.postImage\n                      }  \n                      alt=\"img\"\n                    className=\"cardImg\"\n                    />\n                  </Grid>\n                  <p className=\"appDevNote\" >CreatePostDisplayCard</p>\n                </Grid>\n              )}\n            </Grid>\n            <Grid item sm={2}>\n              {!readyToComplete && (\n                  <>\n                <button\n                  onClick={() => {\n                     //initEdit()\n                    // console.log(\"ACCEPT THE NEW POST\")\n                     setBeginPay(true)\n                     //dispatch to new post action postAccepted\n                     // set postStepone and postStepTwo back to false. call it good.\n\n                     // DO NOT DISPATCH UNTIL POST IS PAID FOR://////////////////////////////////////////\n                    //  dispatch(postAction.acceptPost(currentPost._id))\n                    //  .then((res) => {\n                    //    console.log('accept post result: res:',res)\n\n                    //  })\n                    //  .catch((err) => console.error(err))\n                     ////////////////////////////////////////////////////////////////////////////////////\n\n                  }}\n                  style={{ color: \"blue\" }}\n                >\n                  ACCEPT\n                </button>\n                  <button\n                  onClick={() => {\n                     //initEdit()\n                    \n                    // console.log(\"CANCEL THE NEW POST\")\n                      //dispatch to new post action postCanceled\n                      dispatch(postAction.cancelPost(currentPost._id)).catch((err) => console.error(err))\n                      // delete the post and remove the image. \n                      \n                  }}\n                  style={{ color: \"blue\" }}\n                >\n                  CANCEL\n                </button>\n                  </>\n\n\n              )}\n            </Grid>\n          </Grid>\n          {beginPay && (\n            <>\n             <Elements stripe={stripePromise}>\n            <PayPage prop={props}  currentPost={currentPost}/>\n          </Elements>\n            </>\n          )}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default CreatePostDisplayCard;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { config } from \"../../../Constants\";\nimport CreatePostDisplayCard from \"../../cards/CreatePostDisplayCard\";\n \nconst IMG_URL = config.url.IMG_URL;\nconst LinkStyle = styled.section`\n  padding: 0.3em;\n  height: 35px;\n  background: green;\n  color: #333;\n`;\n\nconst PostStepThree = (props) => {\n\n  //console.log('Post Step 3 props:',props)\n  var auth = useSelector((state) => state.auth.authorized);\n  var user = useSelector((state) => state.auth.user);\n  var post = useSelector((state) => state.post);\n\n  return (\n    <>\n        \n      {\n        post && \n        <CreatePostDisplayCard props={post}></CreatePostDisplayCard>\n      }\n     \n      \n    </>\n  );\n};\n\nexport default PostStepThree;\n ","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { config } from \"../../../Constants\";\nimport PostImageForm from \"../../components/PostImageForm\";\nimport PostStepThree from \"./PostStepThree\";\n\nconst IMG_URL = config.url.IMG_URL;\nconst LinkStyle = styled.section`\n  padding: 0.3em;\n  height: 35px;\n background: orange;\n  color: #333;\n  border-radius:10px;\n  margin:15px;\n`;\n\nconst PostStepTwo = () => {\n  var auth = useSelector((state) => state.auth.authorized);\n  var user = useSelector((state) => state.auth.user);\n  var post = useSelector((state) => state.post);\n\n  //get latest post\n\n  return (\n    <>\n\n      {/* why?: to hide after step two is finished. */}\n      {!post.postStepTwo && \n       <PostImageForm props={post}></PostImageForm>\n      }\n     \n\n\n      {post.postStepTwo &&\n      <Router>\n        <Grid item xs={12} sm={12}>\n          {/* props={currentPost} */}\n         \n          <Link\n            style={{\n              textDecoration: \"none\",\n            }}\n            to=\"/postStepThree\"\n          >\n            <LinkStyle>Step 3</LinkStyle>\n          </Link>\n         \n        </Grid>\n\n        <Route path=\"/postStepThree\" component={PostStepThree} post={post} />\n      </Router>\n}\n    </>\n  );\n};\n\nexport default PostStepTwo;\n \n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { config } from \"../../../Constants\";\nimport * as postAction from \"../../../redux/actions/postAction\";\nimport PostCreateCard from \"../../cards/PostCreateCard\";\nimport PostStepTwo from \"./PostStepTwo\";\nconst IMG_URL = config.url.IMG_URL;\n\nconst LinkStyle = styled.section`\n  padding: 0.3em;\n  height: 35px;\n  background: orange;\n  color: #333;\n  border-radius:10px;\n  margin:15px;\n`;\n\nconst PostStepOne = () => {\n  var auth = useSelector((state) => state.auth.authorized);\n  var user = useSelector((state) => state.auth.user);\n  var post = useSelector((state) => state.post);\n// console.log(\"Post Step One: post:\",post)\n  const dispatch = useDispatch();\n\n\nuseEffect( () => {\n  //just do it once.\n     // dispatch(postAction.initPost()).catch((err) => console.error(err))\n    \n\n      // why?:to set step ZERO = true\n      dispatch(postAction.setStatusBlue()).catch((err) => console.error(err))\n      // why?: to set BLUE\n    },[])\n    // maybe just once initially? post.postStepsAvailable\n\n    var post = useSelector((state) => state.post);\n   // console.log(\"Post Step One: post:\",post)\n    \n  return (\n    <>\n     \n      {post.postStepZero && !post.postStepTwo &&\n       <PostCreateCard></PostCreateCard>\n      }\n\n      {post.postStepOne &&\n      // why?: to show after step one is completed. \n      <Router>\n        <Grid item xs={12} sm={12}>\n            \n          <Link\n            style={{\n              textDecoration: \"none\",\n            }}\n            to=\"/postStepTwo\"\n          >\n            <LinkStyle>Step 2</LinkStyle>\n            \n          </Link>\n         \n        </Grid>\n\n        <Route path=\"/postStepTwo\" component={PostStepTwo}  />\n      </Router>\n    }\n    </>\n  );\n};\n\nexport default PostStepOne;\n ","import Grid from \"@material-ui/core/Grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport * as authAction from \"../../redux/actions/authAction\";\nimport * as postAction from \"../../redux/actions/postAction\";\nimport PostDisplayCard from \"../cards/PostDisplayCard\";\n\n/*\nTO GO: SPINNER: \ndeps:\nimport FadeLoader from \"react-spinners/FadeLoader\";\n\nfn:\nlet [loading, setLoading] = useState(false);\nlet [color, setColor] = useState(\"red\");\n\njsx:\n<div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={\"red\"} loading={loading}  size={1} height={4} width={2}   />\n</div>\n*/\n\nconst UsersPostsPage = (props) => {\n  let [loading, setLoading] = useState(false);\n  var auth = useSelector((state) => state.auth.authorized);\n  const [user, setUser] = useState({});\n  const dispatch = useDispatch();\n  const Kolor = useSelector((state) => state.post.statusColor);\n  const postStepsAvailable = useSelector(\n    (state) => state.post.postStepsAvailable\n  );\n  // I NEED A USE EFFECT TO LISTEN FOR CHANGES ON LOWER COMPONENTS.\n\n  useEffect(() => {\n    setLoading(true)\n    dispatch(authAction.userProfile())\n      .then(async (result) => {\n        //console.log(\"AUTH CHECK: profile to check auth ...result:\", result);\n        setUser(result.data);\n        setLoading(false)\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const [currentPosts, setCurrentPosts] = useState([]);\n  const [haveCurrentPosts, setHaveCurrentPosts] = useState(false);\n\n  const [sortName, setSortName] = useState(false);\n  const [sortEmail, setSortEmail] = useState(false);\n  const [sortId, setSortId] = useState(false);\n  const [sortZip, setSortZip] = useState(false);\n  const [sortState, setSortState] = useState(false);\n  const [noSort, setNoSort] = useState(true); //true by default\n\n  const [filterKey, setFilterKey] = useState(\"\");\n\n  const getDefaultPosts = (key) => {\n    //Function needed to handle case where search input empty or a space.\n    dispatch(postAction.allUserPosts(key))\n      .then(async (result) => {\n        console.log(\"ALL POSTS RESULTS FUNCTION:\", result);\n        setCurrentPosts(result);\n        setHaveCurrentPosts(true);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const getFilteredOwnerPosts = (key, userId) => {\n    dispatch(postAction.filterOwnersPosts(key, userId))\n      .then(async (result) => {\n        //console.log(\" --xx--  FILTERED OWNER POSTS RESULTS:\", result);\n        setCurrentPosts(result);\n        setHaveCurrentPosts(true);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //THIS IS DUPLICATE:\n  // useEffect(() => {\n  //   //initial gets all users posts once.\n  //   dispatch(postAction.allUserPosts(user._id))\n  //     .then(async (result) => {\n  //       setCurrentPosts(result);\n  //       setHaveCurrentPosts(true);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []); // user or post post broke something ? yes. just removed 'user' from brackets.\n\n  useEffect(() => {\n    setLoading(true)\n    dispatch(postAction.allUserPosts(user._id))\n      .then(async (result) => {\n        setCurrentPosts(result);\n        setHaveCurrentPosts(true);\n        setLoading(false)\n      })\n      .catch((err) => console.log(err));\n  }, [Kolor]);\n\n  useEffect(() => {\n    setLoading(true)\n    //initial gets all users posts once.\n    dispatch(postAction.allUserPosts(user._id))\n      .then(async (result) => {\n        setCurrentPosts(result);\n        setHaveCurrentPosts(true);\n        setLoading(false)\n      })\n      .catch((err) => console.log(err));\n  }, [user]); // get new ones when posted...did NOT solve the problem ....\n  // ??????  [postStepsAvailable]  as condition ^^^\n\n  // MAY NEED TO USE\n  //HERE?\n  // whenever currentPosts update I'd like to update state posts as well. (havePost and posts)\n  // ? I creates userPosts array in reducer...now how does AllSitePostsPage page do it. ?\n\n  // FLOW: currentPosts -> post to PostDisplayCard  props.post -> EditPostCard as 'data' THEN upon update...\n  //  dispatch(postAction.updatePost(values)) -> props.refresh() ?\n\n  //NOW: whenever a new post is created, ALL the posts need to be re-queried to get it included.\n  // useEffect based on state.post\n\n  const sortByTitle = (posts) => {\n    posts\n      .sort((a, b) => (a.title > b.title ? 1 : -1))\n      .map((post, i) => {\n        return <PostDisplayCard key={i} post={post}></PostDisplayCard>;\n      });\n  };\n  const clearSortOptions = () => {\n    setSortName(false);\n    setSortEmail(false);\n    setSortId(false);\n    setNoSort(false);\n  };\n  const setSortOption = (e) => {\n   // console.log(e.target.value);\n    const key = e.target.value;\n    clearSortOptions();\n    switch (key) {\n      case \"id\":\n        setSortId(true);\n        break;\n      case \"name\":\n        setSortName(true);\n        break;\n      case \"email\":\n        setSortEmail(true);\n        break;\n      default:\n        setNoSort(true);\n        break;\n    }\n  };\n\n  const setFilterOption = (e) => {\n    setFilterKey(e.target.value);\n    //console.log(\"SETTING FILTER:\");\n    const key = e.target.value;\n\n    if (key === \"\" || key === \" \") {\n      //console.log(\"GET DEFAULT DATA BACK...\");\n      getDefaultPosts(user._id);\n    } else {\n      const userId = user._id;\n      getFilteredOwnerPosts(key, userId);\n    }\n  };\n  //\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const refreshUserPosts = () => {\n    // console.log(\n    //   \"should refresh users posts here and now immediately after changing....\"\n    // );\n    //to do this...need to requery\n    dispatch(postAction.allUserPosts(user._id))\n      .then(async (result) => {\n        setCurrentPosts(result);\n        setHaveCurrentPosts(true);\n      })\n      .catch((err) => console.log(err));\n\n    // console.log(\n    //   \"Question now is does this refreshed data continue down to the bottom component. YES SUCCESS!\"\n    // );\n  };\n\n  const displayPosts = () => {\n    //console.log(\"DISPLAY currentPosts:\",currentPosts);\n    if (currentPosts.length > 0) {\n      //console.log(\"UsersPostsPage.js currentPosts:\",currentPosts);\n    }\n    if (haveCurrentPosts) {\n      if (sortName) {\n        return currentPosts\n          .sort((a, b) => (a.title > b.title ? 1 : -1))\n          .map((post, i) => {\n            return <PostDisplayCard key={i} post={post}></PostDisplayCard>;\n          });\n      }\n      if (sortEmail) {\n        return currentPosts\n          .sort((a, b) => (a.email > b.email ? 1 : -1))\n          .map((post, i) => {\n            return <PostDisplayCard key={i} post={post}></PostDisplayCard>;\n          });\n      }\n      if (sortId) {\n        return currentPosts\n          .sort((a, b) => (a._id > b._id ? 1 : -1))\n          .map((post, i) => {\n            return <PostDisplayCard key={i} post={post}></PostDisplayCard>;\n          });\n      }\n\n      if (noSort) {\n        return currentPosts.map((post, i) => {\n          return (\n            <PostDisplayCard\n              key={i}\n              post={post}\n              refresh={refreshUserPosts}\n            ></PostDisplayCard>\n          );\n        });\n      }\n    }\n  };\n\n  if (!auth) {\n    return <div>not authorized.</div>;\n  }\n\n  return (\n    //className=\"card-plain\"\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      className=\"appPage\"\n    >\n      <div style={{ position: \"absolute\", bottom: \"25%\", left: \"50%\" }}>\n        <FadeLoader\n          color={\"red\"}\n          loading={loading}\n          size={5}\n          height={4}\n          width={2}\n        />\n      </div>\n      <Grid item>\n        <span>\n          <h2>Current Posts</h2>\n        </span>\n      </Grid>\n      <Grid item></Grid>\n\n      {haveCurrentPosts && displayPosts()}\n      <p className=\"appDevNote\">UsersPostPage</p>\n    </Grid>\n  );\n};\n\nexport default UsersPostsPage;\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"../../App.css\";\nimport { config } from \"../../Constants\";\nimport * as postAction from \"../../redux/actions/postAction\";\nimport PostStepOne from \"./PostCreation/PostStepOne\";\nimport UsersPostsPage from \"./UsersPostsPage\";\n\n/*\nTO GO: \nimport { useDispatch, useSelector } from \"react-redux\";\n\n  var post = useSelector((state) => state.post);\n\n\n*/\nconst IMG_URL = config.url.IMG_URL;\n\nconst LinkStyle = styled.section`\n  padding: 0.3em;\n  height: 35px;\n  background: orange;\n  color: #333;\n  border-radius:10px;\n  margin:15px;\n`;\n\nexport default function DashboardPage(props) {\n\n  const dispatch = useDispatch();\n  var auth = useSelector((state) => state.auth.authorized);\n  var user = useSelector((state) => state.auth.user);\n  var haveUser = useSelector((state) => state.auth.haveUser);\n  var post = useSelector((state) => state.post);\n  const [editingPost, setEditingPost] = useState(false)\n // console.log(\"post:\",post)\n  if (!auth) {\n    return <div>not authorized.</div>;\n  }\n\n  const initPostCreation = () => {\n    dispatch(postAction.initPost()).catch((err) => console.error(err))\n  }\n  \n  return (\n    <React.Fragment>\n      <Grid container className=\"main-component-container\">\n        <Grid container alignItems=\"center\" justify=\"center\" style={{background:\"#fff\",borderRadius:\"10px\",padding:\".5em 0 .5em 0\",margin:\".5em 0 .5em 0\"}}>\n         \n          <Grid item xs={8} className=\"pageTitle \" >\n             <h1 className=\"trim\">Dashboard</h1>\n           </Grid>\n\n          {haveUser && (\n            <>\n               <Grid item sm={2} className=\"pageGreeting\" >\n                <h3 className=\"trim\" >Hello,</h3> <p className=\"trim\">{user.data.fullName}</p>\n              </Grid>\n              <Grid item sm={2} className=\"pageGreeting\">\n                <img\n                  src={`${IMG_URL}/` + user.data.profileImage} //+ props.props.post.postImage\n                  alt=\"img\"\n                  style={{\n                    height: \"100px\",\n                    width: \"auto\",\n                    borderRadius: \"15px\",\n                  }}\n                />\n              </Grid>\n             </>\n          )}\n          \n        </Grid>\n        <Grid container style={{background:\"#FFF\",padding:\".5em 0 .5em 0\",margin:\".5em 0 .5em 0\",borderRadius:\"10px\"}}>\n          <Grid item xs={12} sm={6}>\n            {/* <PostCreatePage></PostCreatePage> */}\n\n            <Router>\n              <Grid item xs={12} sm={12} >\n                <h3>Create A Post</h3>\n                <Link\n                  style={{\n                    textDecoration: \"none\",\n                  }}\n                  to=\"/postStepOne\"\n                  onClick={initPostCreation}\n                  // dispatch(postAction.initPost()).catch((err) => console.error(err))\n                >\n                  <LinkStyle>Step 1</LinkStyle>\n                </Link>\n              </Grid>\n              <Route path=\"/postStepOne\" component={PostStepOne} />\n            </Router>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n             {post.postStepsAvailable &&\n              <UsersPostsPage></UsersPostsPage>\n             }\n            \n            \n           \n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n/*\nROUTER CODE TO GO: \nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport DashboardPage from \"./pages/DashboardPage\";\n\n<Router>\n\n\n    <Grid item xs={12} sm={1}>\n      <Link\n        style={{\n          textDecoration: \"none\",\n        }}\n        to=\"/dashboard\"\n      >\n        <LinkStyle>Dashboard</LinkStyle>\n      </Link>\n    </Grid>\n\n      <Route path=\"/dashboard\" component={DashboardPage} />\n\n\n</Router>\n\n*/\n","import { CircularProgress, Icon } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport * as yup from \"yup\";\n// import { config } from '../../Constants';\nimport * as authAction from \"../../redux/actions/authAction\";\n\nconst formSchema = yup.object({\n  fullName: yup.string().required().min(3),\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n  sms_secret: yup.string().required().min(4),\n});\n\nfunction ButtonComponent(props) {\n  const { onClick, loading } = props;\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        onClick={onClick}\n        disabled={loading}\n        style={{ marginTop: \"15px\", marginBottom: \"15px\" }}\n      >\n        {loading && <CircularProgress size={14} />}\n        {!loading && \"Register\"}\n      </Button>\n      <div style={{ position: \"absolute\", bottom: \"25%\", left: \"50%\" }}>\n        <FadeLoader\n          color={\"blue\"}\n          loading={loading}\n          size={1}\n          height={4}\n          width={2}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default function FreeRegistrationPage(props) {\n  const [loading, setLoading] = useState(false);\n  const [inProgress, setInProgress] = useState(false);\n  // const [regProps,setRegProps] = useState({})\n  // setRegProps(props)\n  const dispatch = useDispatch();\n\n  const { closeRegistration } = props;\n  const { history } = props;\n\n  const goBack = () => {\n    console.log(\"history:\", history);\n    // console.log('fn GoBack.....')\n    // props.rere()\n    alert(\n      \"You Are Registered, next go to your Profile page and fill in your info.\"\n    );\n  };\n\n  const goBack2 = () => {\n    console.log(\"fn GoBack.2....\");\n  };\n\n  const goBack3 = () => {\n    console.log(\"fn GoBack..3...\");\n  };\n\n  return (\n    <>\n      <React.Fragment>\n        <Grid\n          container\n          spacing={0}\n          align=\"center\"\n          justify=\"center\"\n          direction=\"column\"\n          style={{ paddingBottom: \"100px\", fontSize: \".8em\" }}\n        >\n          <Grid item xs={12} sm={12} style={{ marginTop: \"100px\" }}>\n            {/* //FORM AND REDUX  part 3 JSX*/}\n            <Card>\n              <h1>Great!</h1>\n              <p>Once you register, you'll be able to create ads.</p>\n              \n              text{\" \"}\n              <a\n                href=\"sms:+17702855486&body=servewerx\"\n                style={{ textDecoration: \"none\", fontWeight: \"bold\" }}\n              >\n                SERVEWERX <Icon>sms</Icon> \n              </a>\n              770-285-5486\n              <p>to get your code.</p>\n              <p></p>\n            </Card>\n            {/* <input name=\"sms_response\" placeholder=\"sms response here.\"></input>\n              <button onClick={ () => {console.log('need to verify user....phone....')} }>Submit Your Response</button> */}\n            <Grid item>\n              <Formik\n                initialValues={{\n                  fullName: \"\",\n                  email: \"\",\n                  password: \"\",\n                  sms_secret: \"\",\n                }}\n                validationSchema={formSchema}\n                onSubmit={(values) => {\n                  console.log(\"values:\", values);\n                  setInProgress(true);\n                  setLoading(true);\n                  dispatch(authAction.registerUser(values))\n                    .then(async (result) => {\n                      console.log(\"register result:\", result);\n                      localStorage.setItem(\"forteworksToken\", result.token);\n                      localStorage.setItem(\"registerToken\", result.token);\n                      setTimeout(() => setLoading(false), 3000);\n                      if (result.success) {\n                        setInProgress(true);\n                        //setLoading(false)\n                        // console.log('----this.props:',props)\n                        // console.log(' looking for rere rerender..... ')\n                        //goBack()\n                        //FAIL history.push('/profile');\n                        // console.log(context);\n                        // console.log(context.history)\n                        // console.log(history);\n                        // context.history.push('/profile')\n                        console.log(\". . . . . . props:\", props);\n                        history.push(\"/profile\");\n                      }\n                    })\n                    .catch((err) => console.log(err));\n                  goBack2();\n                  console.log(\"dispatch is over ???  over?\");\n                }}\n              >\n                {(props) => (\n                  <Card>\n                    <Grid container alignItems=\"center\" justify=\"center\" style={{padding:\"1em\"}}>\n                      <Grid item xs={12} sm={4}>\n                        <div style={{ textAlign: \"center\" }}>\n                          <input\n                            className=\"appInput\"\n                            // style={{\n                            //   marginTop: \"15px\",\n                            //   border: \"none\",\n                            //   outline: \"none\",\n                            //   borderBottom: \"solid 1px #ddd\",\n                            //   padding: \"10px\",\n                            //   width:\"100%\"\n                            // }}\n                            placeholder=\"Business or User Name\"\n                            onChange={props.handleChange(\"fullName\")}\n                            value={props.values.fullName}\n                            onBlur={props.handleBlur(\"fullName\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.fullName && props.errors.fullName}\n                          </div>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Email\"\n                            onChange={props.handleChange(\"email\")}\n                            value={props.values.email}\n                            onBlur={props.handleBlur(\"email\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.email && props.errors.email}\n                          </div>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Password\"\n                            onChange={props.handleChange(\"password\")}\n                            value={props.values.password}\n                            onBlur={props.handleBlur(\"password\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.password && props.errors.password}\n                          </div>\n\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Text Code\"\n                            onChange={props.handleChange(\"sms_secret\")}\n                            value={props.values.sms_secret}\n                            onBlur={props.handleBlur(\"sms_secret\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.sms_secret &&\n                              props.errors.sms_secret}\n                          </div>\n\n                          <ButtonComponent\n                            onClick={props.handleSubmit}\n                            loading={loading}\n                          />\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </Card>\n                )}\n              </Formik>\n            </Grid>\n            {/* //end  part 3*/}\n          </Grid>\n          <Card>\n            <p>\n              Ads are <span style={{ fontWeight: \"bold\" }}>$1.00</span> per\n              month.\n            </p>\n            <p>\n              All payments made securely via{\" \"}\n              <a href=\"https://stripe.com/\" style={{ textDecoration: \"none\" }}>\n                Stripe.com\n              </a>{\" \"}\n            </p>\n          </Card>\n        </Grid>\n      </React.Fragment>\n    </>\n  );\n}\n\n/*\nTO GO: SPINNER: \ndeps:\nimport FadeLoader from \"react-spinners/FadeLoader\";\n\nfn:\nlet [loading, setLoading] = useState(false);\nlet [color, setColor] = useState(\"red\");\n\njsx:\n<div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={color} loading={loading}  size={1} height={4} width={2}   />\n</div>\n*/\n","import { Card, CircularProgress } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n//FORM AND REDUX part 1: in header\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\"; //useSelector?\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport * as authAction from \"../../redux/actions/authAction\";\n// import logo from \"../assets/img/pexels-pixabay-159201.jpg\";\n// import logo from \"../assets/img/pexels-laurie-shaw-804392.jpg\";\nimport DashboardPage from \"./DashboardPage\";\n\nconst formSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required().min(6),\n});\n//end  part 1\n\nfunction ButtonComponent(props) {\n  const { onClick, loading } = props;\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={onClick}\n      disabled={loading}\n      style={{ marginTop: \"15px\", marginBottom: \"15px\" }}\n    >\n      {loading && <CircularProgress size={14} />}\n      {!loading && \"Log In\"}\n    </Button>\n  );\n}\n\nexport default function LoginPage(props) {\n  const [loading, setLoading] = useState(false);\n  const { ...rest } = props; //?\n\n  //FORM AND REDUX  part 2: default export function\n  const dispatch = useDispatch();\n  const [inProgress, setInProgress] = useState(false);\n  console.log(\"inProgress:\", inProgress);\n  useEffect(() => {\n    setInProgress(inProgress);\n  }, [inProgress]);\n  //end  part 2\n  if (!inProgress) {\n    return (\n      <React.Fragment>\n        <Grid\n          container\n          spacing={0}\n          align=\"center\"\n          justify=\"center\"\n          direction=\"column\"\n        >\n          <Paper\n            style={{\n              // backgroundImage: `url(${logo})`,\n              // backgroundSize: \"cover\",\n             background:\"none\",\n              // opacity:\".5\",\n              height: \"750px\",\n            }}\n          >\n            <Grid item xs={12} style={{ marginTop: \"25vh\",width:\"95%\" ,opacity:\".95\"}}>\n              {/* //FORM AND REDUX  part 3 JSX*/}\n              <Formik\n                initialValues={{\n                  email: \"\",\n                  password: \"\",\n                }}\n                validationSchema={formSchema}\n                onSubmit={(values) => {\n                  console.log(\"values:\", values);\n                  setInProgress(true);\n                  setLoading(true);\n                  dispatch(authAction.loginUser(values))\n                    .then(async (result) => {\n                      console.log(\"result:\", result);\n                      localStorage.setItem(\"forteworksToken\", result.token);\n                      // setTimeout(() => setLoading(false), 3000);\n                      if (result.success) {\n                        setInProgress(true);\n                        setLoading(false);\n                      } else {\n                        setInProgress(false);\n                        setLoading(false);\n                      }\n                    })\n                    .catch((err) => console.log(err));\n                }}\n              >\n                {(props) => (\n                  <Card>\n                    <Grid\n                      container\n                      direction=\"column\"\n                      style={{ textAlign: \"center\" }}\n                    >\n                      <Grid item xs={12} sm={2}></Grid>\n                      <Grid item xs={12} sm={8}>\n                        <input\n                          style={{\n                            marginTop: \"15px\",\n                            border: \"none\",\n                            outline: \"none\",\n                            borderBottom: \"solid 1px #ddd\",\n                            padding: \"10px\",\n                          }}\n                          placeholder=\"Email\"\n                          onChange={props.handleChange(\"email\")}\n                          value={props.values.email}\n                          onBlur={props.handleBlur(\"email\")}\n                        />\n                        <div style={{ color: \"salmon\" }}>\n                          {props.touched.email && props.errors.email}\n                        </div>\n                        <input\n                          style={{\n                            marginTop: \"15px\",\n                            border: \"none\",\n                            outline: \"none\",\n                            borderBottom: \"solid 1px #ddd\",\n                            padding: \"10px\",\n                          }}\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          onChange={props.handleChange(\"password\")}\n                          value={props.values.password}\n                          onBlur={props.handleBlur(\"password\")}\n                        />\n                        <div style={{ color: \"salmon\" }}>\n                          {props.touched.password && props.errors.password}\n                        </div>\n\n                        <ButtonComponent\n                          onClick={props.handleSubmit}\n                          loading={loading}\n                        />\n                      </Grid>\n\n                      <Grid item xs={12} sm={2}></Grid>\n                    </Grid>\n                  </Card>\n                )}\n              </Formik>\n\n              {/* //end  part 3*/}\n            </Grid>\n          </Paper>\n        </Grid>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <Router>\n        <Route path=\"/login\" component={DashboardPage} />\n      </Router>\n    );\n  }\n}\n\n/*\n\n  <React.Fragment>\n      <Grid\n        container\n        spacing={0}\n        align=\"center\"\n        justify=\"center\"\n        direction=\"column\"\n      >\n        <Paper\n          style={{\n            backgroundImage: `url(${logo})`,\n            backgroundSize: \"cover\",\n            height: \"750px\",\n          }}\n        >\n          <Elements stripe={stripePromise}>\n            <PayPage prop={props} />\n          </Elements>\n        </Paper>\n      </Grid>\n    </React.Fragment>\n*/\n","//THANKS TO: https://stackoverflow.com/questions/65176026/uploading-image-from-react-frontend-to-express-backend-and-displaying-it-back-in\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { config } from \"../../Constants\";\nimport * as authAction from \"../../redux/actions/authAction\";\n\n\n\n/*\nTO GO: SPINNER: \ndeps:\nimport FadeLoader from \"react-spinners/FadeLoader\";\n\nfn:\nlet [loading, setLoading] = useState(false);\nlet [color, setColor] = useState(\"red\");\n\njsx:\n<div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={color} loading={loading}  size={1} height={4} width={2}   />\n</div>\n*/\n\n\n\nconst ImageForm = (props) => {\n  const dispatch = useDispatch();\n  //console.log(\"PROPS: \", props);\n  let [loading, setLoading] = useState(false);\n  const [file, setFile] = useState(null);\n  // const [imgFile, setImgFile] = useState(null);\n  //const [id, setId] = useState(props.props.user._id);\n  var user = useSelector((state) => state.auth.user);\n  const handleFileChange = (event) => {\n    setFile(event.target.files);\n   // console.log(file);\n  };\n\n  const API_URL = config.url.API_URL;\n  const IMG_URL = config.url.IMG_URL;\n\n  const handleSubmit = async (event) => {\n   \n    event.preventDefault();\n\n    if (!file) {\n      return false;\n    }\n    setLoading(true)\n    const data = new FormData();\n    data.append(\"_id\", props.props.user._id);\n    for (var x = 0; x < file.length; x++) {\n      data.append(\"file\", file[x]);\n    }\n    //TODO: \n    // MAKE separate User and Post images. \n    // try to use multer code within a scope. \n    \n    axios.post(`${API_URL}/uploadUserImage`, data).then((res) => {\n      // setImgFile(`${IMG_URL}/` + res.data);\n      const profileImage = res.data;\n      user.data.profileImage = profileImage;\n      const values = user.data;\n      dispatch(authAction.updateUser(values))\n        .then(async (result) => {\n          if (result.success) {\n            //code\n            setLoading(false)\n          }\n          props.props.refresh();\n          props.close()\n        })\n        .catch((err) => console.log(err));\n    });\n  };\n\n  return (\n    <Grid\n      container\n      spacing={1}\n      align=\"center\"\n      justify=\"center\"\n      direction=\"column\"\n      \n       \n    >\n      <Grid item xs={12}>\n      <form name=\"fileinfo\" encType=\"multipart/form-data\">\n        <Grid item xs={12}  >\n          {/* {imgFile && (\n              \n                <img\n                  src={imgFile}\n                  alt=\"img\"\n                  style={{\n                    height: \"100px\",\n                    width: \"auto\",\n                    borderRadius: \"15px\",\n                  }}\n                />\n              \n            )}   */}\n\n          {\n            <img\n              src={`${IMG_URL}/` + props.props.user.profileImage}\n              alt=\"img\"\n              style={{ height: \"150px\", width: \"auto\", borderRadius: \"15px\" }}\n            />\n          }\n        </Grid>\n\n        <Grid item xs={12}>\n          <input\n            name=\"profileImage\"\n            type=\"file\"\n            id=\"file\"\n            accept=\".jpg , .png\"\n            multiple\n            onChange={handleFileChange}\n            style={{ outline: \"none\", border: \"none\" }}\n            \n          />\n        </Grid>\n        <Grid item xs={12}>\n          <button className=\"appButton\" onClick={handleSubmit} style={{width:\"90%\"}}>\n            Update Your Profile Image\n          </button>\n          <div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={\"red\"} loading={loading}  size={1} height={4} width={2}   />\n</div>\n        </Grid>\n      </form>\n      <p className=\"appDevNote\" >ImageForm</p>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ImageForm;\n","import { Typography } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport * as yup from \"yup\";\nimport \"../../App.css\";\nimport * as authAction from \"../../redux/actions/authAction\";\nimport ImageForm from \"../components/ImageForm\";\n\n/*\nTO GO: SPINNER: \ndeps:\nimport FadeLoader from \"react-spinners/FadeLoader\";\n\nfn:\nlet [loading, setLoading] = useState(false);\nlet [color, setColor] = useState(\"red\");\n\njsx:\n<div style={{position:\"absolute\",bottom:\"25%\",left:\"50%\"}} >\n<FadeLoader color={\"red\"} loading={loading}  size={1} height={4} width={2}   />\n</div>\n*/\nconst formSchema = yup.object({\n  fullName: yup.string().required().min(3),\n  email: yup.string().email().required(),\n  phone: yup.string().min(10),\n});\n\nconst ProfileCard = (props) => {\n  let [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n  const [seeDetails, setSeeDetails] = useState(false);\n  const [inProgress, setInProgress] = useState(false);\n\n  useEffect(() => {\n    setInProgress(inProgress);\n  }, [inProgress]);\n  var us_states = useSelector((state) => state.auth.usstates);\n  const close = () => {\n    setSeeDetails(!seeDetails);\n  };\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ background: \"#fff\", borderRadius: \"10px\", padding: \"15px\" }}\n    >\n      <Grid container spacing={0} direction=\"row\">\n        <Grid item xs={12} sm={9}>\n          <Typography variant=\"h5\" component=\"h2\">\n            {props.user.fullName}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <button\n            onClick={() => {\n              setSeeDetails(!seeDetails);\n            }}\n          >\n            {seeDetails ? \"Close My Profile\" : \"Edit My Profile\"}\n          </button>\n        </Grid>\n        <Grid item xs={12}>\n          <p>Your data here will be used to auto-fill your 'posts'.</p>\n        </Grid>\n      </Grid>\n\n      {seeDetails && (\n        <>\n          <React.Fragment>\n            <Grid\n              container\n              spacing={0}\n              align=\"center\"\n              justify=\"center\"\n              direction=\"row\"\n            >\n              <Grid item xs={12} sm={5}>\n                <ImageForm props={props} close={close}></ImageForm>\n              </Grid>\n              <Grid item xs={12} sm={5}>\n                {/* //FORM AND REDUX  part 3 JSX*/}\n                <Formik\n                  initialValues={{\n                    fullName: props.user.fullName,\n                    email: props.user.email,\n                    phone: props.user.phone,\n                    address: props.user.address,\n                    city: props.user.city,\n                    state: props.user.state,\n                    zip: props.user.zip,\n                    profileImage: props.user.profileImage,\n                    website: props.user.website,\n                    created: props.user.created,\n                    lastUpdated: props.user.lastUpdated,\n                  }}\n                  validationSchema={formSchema}\n                  onSubmit={(values) => {\n                   // console.log(\"values:\", values);\n                    setInProgress(true);\n                    setLoading(true);\n                    dispatch(authAction.updateUser(values))\n                      .then(async (result) => {\n                        //console.log(\"update result:\", result);\n\n                        if (result.success) {\n                          setInProgress(true);\n                          //TODO: I don't think we are getting a 'success' option back from the request.\n                        }\n                        props.refresh();\n                        setSeeDetails(!seeDetails);\n                        setLoading(false)\n                      })\n                      .catch((err) => console.log(err));\n                  }}\n                >\n                  {(props) => (\n                    <Grid\n                      container\n                      spacing={2}\n                      className=\"ProfileCardForm\"\n                      align=\"center\"\n                      justify=\"center\"\n                    >\n                      <Grid item xs={12} sm={12}>\n                        <Grid item xs={12} sm={6}>\n                          <label>\n                            Full Name <span style={{color:\"#444\",fontSize:\".8em\"}}>( The name of you or your company.)</span>\n                          </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Business Name or User Name\"\n                            onChange={props.handleChange(\"fullName\")}\n                            value={props.values.fullName}\n                            onBlur={props.handleBlur(\"fullName\")}\n                          />\n\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.fullName && props.errors.fullName}\n                          </div>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                          <label>Email <span style={{color:\"red\",fontSize:\".8em\"}}>*</span></label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Email\"\n                            onChange={props.handleChange(\"email\")}\n                            value={props.values.email}\n                            onBlur={props.handleBlur(\"email\")}\n                            disabled\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.email && props.errors.email}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <label>Phone<span style={{color:\"red\",fontSize:\".8em\"}}>*</span></label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Phone\"\n                            onChange={props.handleChange(\"phone\")}\n                            value={props.values.phone}\n                            onBlur={props.handleBlur(\"phone\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.phone && props.errors.phone}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <label>Address</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Address\"\n                            onChange={props.handleChange(\"address\")}\n                            value={props.values.address}\n                            onBlur={props.handleBlur(\"address\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.address && props.errors.address}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <label>City</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"City\"\n                            onChange={props.handleChange(\"city\")}\n                            value={props.values.city}\n                            onBlur={props.handleBlur(\"city\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.city && props.errors.city}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <label>State</label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <select\n                            value={props.values.state}\n                            onChange={props.handleChange(\"state\")}\n                            className=\"appSelect\"\n                          >\n                            {us_states.map((item, index) => {\n                              return (\n                                <option key={index} value={index}>\n                                  {item}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <label>\n                            Zip<span style={{color:\"green\",fontSize:\".8em\"}}>**</span>\n                          </label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Zip\"\n                            onChange={props.handleChange(\"zip\")}\n                            value={props.values.zip}\n                            onBlur={props.handleBlur(\"zip\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.zip && props.errors.zip}\n                          </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <label>Website<span style={{color:\"red\",fontSize:\".8em\"}}>*</span></label>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <input\n                            className=\"appInput\"\n                            placeholder=\"Website\"\n                            onChange={props.handleChange(\"website\")}\n                            value={props.values.website}\n                            onBlur={props.handleBlur(\"website\")}\n                          />\n                          <div style={{ color: \"salmon\" }}>\n                            {props.touched.website && props.errors.website}\n                          </div>\n                        </Grid>\n                        <input\n                          type=\"hidden\"\n                          onChange={() => {}}\n                          value={props.values.profileImage}\n                          disabled\n                        />\n\n                        {/* UPLOAD AN IMAGE: https://www.youtube.com/watch?v=SAUvlkTDMM4 */}\n                        <Grid item xs={12}>\n                          <button onClick={props.handleSubmit}>Update</button>\n                          <div\n                            style={{\n                              position: \"absolute\",\n                              bottom: \"25%\",\n                              left: \"50%\",\n                            }}\n                          >\n                            <FadeLoader\n                              color={\"red\"}\n                              loading={loading}\n                              size={1}\n                              height={4}\n                              width={2}\n                            />\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  )}\n                </Formik>\n\n                {/* //end  part 3*/}\n                <p>\n                <span style={{color:\"red\"}}>* </span>= Auto -Completed and 'publicly' available in your 'posts/ads' unless you alter it.\n                </p>\n                <p>\n                <span style={{color:\"green\"}}>** </span>= Important for other people to find you in proximity searches.\n                </p>\n                <p>\n                  Once your profile is set up, you can go to your 'Dashboard' and\n                  create a Post.\n                </p>\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        </>\n      )}\n\n      <p className=\"appDevNote\">ProfileCard</p>\n    </Grid>\n  );\n};\n\nexport default ProfileCard;\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as authAction from \"../../redux/actions/authAction\";\nimport ProfileCard from \"../cards/ProfileCard\";\n\nconst ProfilePage = (props) => {\n  var auth = useSelector((state) => state.auth.authorized);\n  const [user, setUser] = useState({});\n  //var user = useSelector((state) => state.auth.user);\n  //var haveUser = useSelector((state) => state.auth.haveUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authAction.userProfile())\n      .then(async (result) => {\n        //console.log(\"profile result:\", result);\n        setUser(result.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  if (!auth) {\n    return <div>not authorized.</div>;\n  }\n  const getUserProfile = () => {\n    dispatch(authAction.userProfile())\n      .then(async (result) => {\n        //console.log(\"result:\", result);\n        setUser(result.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      // align=\"center\"\n      // justify=\"center\"\n      direction=\"column\"\n      className=\"main-component-container\"\n    >\n      <h3>My Profile</h3>\n\n      <ProfileCard user={user} refresh={getUserProfile}></ProfileCard>\n      <p className=\"appDevNote\">ProfilePage</p>\n       {/* <Grid>\n         { user._id === \"607da64cdfa3380004aceabf\" &&\n            <h1>ME</h1>\n         }\n       </Grid> */}\n    </Grid>\n  );\n};\n\nexport default ProfilePage;\n\n\n/*\nTO GO: reat-spring Parallax \n\nimport { Parallax, ParallaxLayer } from \"@react-spring/parallax\";\n\n\n <Parallax pages={2} style={{ top: \"0\", left: \"0\" }}>\n        <ParallaxLayer\n          offset={0}\n          speed={2.5}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <p>Scroll down</p>\n        </ParallaxLayer>\n\n        <ParallaxLayer\n          offset={1}\n          speed={2}\n          style={{ backgroundColor: \"#ff6d6d\" }}\n        />\n\n        <ParallaxLayer\n          offset={1}\n          speed={0.5}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            color: \"white\",\n          }}\n        >\n          <p>Scroll up</p>\n        </ParallaxLayer>\n      </Parallax>\n\n*/","import Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n// import Icon from \"@material-ui/core/Icon\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport * as authAction from \"../redux/actions/authAction\";\nimport * as postAction from \"../redux/actions/postAction\";\nimport Home from \"./Home\";\nimport AdminPage from \"./pages/Admin\";\nimport AllSitePostsPage from \"./pages/AllSitePostsPage\";\nimport DashboardPage from \"./pages/DashboardPage\";\n// import RegisterPage from \"./pages/RegisterPage\";\nimport FreeRegistrationPage from \"./pages/FreeRegistrationPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\n\nconst LinkStyle = styled.section`\n  padding: 0 0.3em 0 0.3em;\n  height: 35px;\n  background: #fff;\n  color: #333;\n  font-size: .9em\n  border-radius: 10px !important;\n  opacity: 0.8;\n`;\n\nexport default function NavigationMenu(props) {\n  //console.log(\"navigation menu props:\", props);\n  var auth = useSelector((state) => state.auth.authorized);\n  const [user, setUser] = useState({});\n  const [admin,setAdmin] =  useState(false);\n  //const [redirect, setRedirect] = useState(null);\n  const [hideRegister, setHideRegister] = useState(false);\n  const dispatch = useDispatch();\n\n  const hideRegistrationPromt = () => {\n    setHideRegister(!hideRegister);\n  };\n\n  useEffect(() => {\n    //check authorization\n    dispatch(authAction.userProfile())\n      .then(async (result) => {\n        setUser(result.data);\n        //console.log(\"NAVIGATION : user:\", user);\n        if( user._id === \"607da64cdfa3380004aceabf\"){\n          setAdmin(true);\n        }\n      })\n      .catch((err) => console.log(err));\n  }, []);//user\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    //console.log(\"anchorEl:\", anchorEl);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Router>\n        <Toolbar\n          style={{\n            position: \"fixed\",\n            top: \"0px\",\n            left: \"0px\",\n            right: \"0px\",\n            zIndex: \"101\",\n            background: \"#fff\",\n          }}\n        >\n          <Grid\n            container\n            spacing={1}\n           // alignItems=\"bottom\"\n            justify=\"center\"\n            style={{ padding: \".2em 0 0 0\" }}\n          >\n            <Grid item sm={1}>\n              <IconButton\n                edge=\"start\"\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                aria-label=\"menu\"\n                onClick={handleClick}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>\n                  \n                  <LinkStyle>\n                    <Link\n                      to=\"/\"\n                      style={{ textDecoration: \"none\", color: \"#222\" }}\n                    >\n                      Home\n                    </Link>\n                  </LinkStyle>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                  \n                  <LinkStyle>\n                    <Link\n                      to=\"/allSitePosts\"\n                      style={{ textDecoration: \"none\", color: \"#222\" }}\n                    >\n                      Browse\n                    </Link>\n                  </LinkStyle>\n                </MenuItem>\n                {auth && (\n                  <div>\n                    <MenuItem onClick={handleClose}>\n                      \n                      <LinkStyle>\n                        <Link\n                          to=\"/dashboard\"\n                          style={{ textDecoration: \"none\", color: \"#222\" }}\n                        >\n                          My Dashboard\n                        </Link>\n                      </LinkStyle>\n                    </MenuItem>\n                    <MenuItem onClick={handleClose}>\n                      \n                      <LinkStyle>\n                        <Link\n                          to=\"/profile\"\n                          style={{ textDecoration: \"none\", color: \"#222\" }}\n                        >\n                          My Profile\n                        </Link>\n                      </LinkStyle>\n                    </MenuItem>\n                   { admin && \n                       <MenuItem onClick={handleClose}>\n                       \n                       <LinkStyle>\n                         <Link\n                           to=\"/admin\"\n                           style={{ textDecoration: \"none\", color: \"#222\" }}\n                         >\n                           Admin\n                         </Link>\n                       </LinkStyle>\n                     </MenuItem>\n                    }\n                  </div>\n                )}\n                {!auth ? (\n                  <div>\n                    <MenuItem onClick={handleClose}>\n                      \n                      <LinkStyle>\n                        <Link\n                          to=\"/login\"\n                          style={{ textDecoration: \"none\", color: \"#222\" }}\n                        >\n                          Login\n                        </Link>\n                      </LinkStyle>\n                    </MenuItem>\n                     <MenuItem onClick={handleClose}>\n                      \n                      <LinkStyle>\n                        <Link\n                          to=\"/register\"\n                          style={{ textDecoration: \"none\", color: \"#222\" }}\n                        >\n                          Register\n                        </Link>\n                      </LinkStyle>\n                    </MenuItem> \n                  </div>\n                ) : (\n                  <div>\n                    <MenuItem onClick={handleClose}>\n                      <Link\n                        style={{\n                          textDecoration: \"none\",\n                          backgroundColor: \"#ccc\",\n                          color: \"#fff\",\n                        }}\n                        to=\"/logout\"\n                        onClick={() => {\n                          dispatch(authAction.logoutUser())\n                            .then(async (result) => {\n                              //console.log(\"result:\", result);\n                              //PURGE post step vars:\n                              localStorage.removeItem(\"forteworksToken\");\n                              dispatch(postAction.clearPost())\n                                .then(async (result) => {\n                                 \n                                })\n                                .catch((err) => console.log(err));\n                            })\n                            .catch((err) => console.log(err));\n                        }}\n                      >\n                        <LinkStyle\n                          style={{\n                            textDecoration: \"none\",\n                            backgroundColor: \"#ccc\",\n                            color: \"#fff\",\n                          }}\n                        >\n                          Logout\n                        </LinkStyle>\n                      </Link>\n                    </MenuItem>\n                  </div>\n                )}\n              </Menu>\n            </Grid>\n            <Grid item sm={6} xs={8}>\n              {/* <div className=\"brandname\">Servewerx.com  </div> */}\n              <div className=\"brand_name_logo\"></div>\n            </Grid>\n\n            <Grid item sm={3} xs={1}>\n              <Grid container alignItems=\"center\" justify=\"center\">\n                <Grid item>\n                  <button onClick={hideRegistrationPromt}>\n                    <Link\n                      to=\"/allSitePosts\"\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"darkgreen\",\n                        fontWeight: \"600\",\n                      }}\n                    >\n                      Browse\n                    </Link>\n                  </button>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item sm={1}>\n              <div className=\"server_logo\"></div>\n            </Grid>\n            <Grid item sm={1} xs={12} style={{ textAlign: \"right\" }}>\n              {!auth && !hideRegister && (\n                <Link\n                  to=\"/register\"\n                  style={{\n                    textDecoration: \"none\",\n                    color: \"orange\",\n                    fontWeight: \"bold\",\n                    backgroundColor: \"transparent\",\n                  }}\n                >\n                  Get Started\n                </Link>\n              )}\n            </Grid>\n          </Grid>\n        </Toolbar>\n\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/build\" component={Home} />\n        <Route path=\"/login\" component={LoginPage} />\n        {/* <Route path=\"/register\" component={RegisterPage} /> */}\n        <Route path=\"/dashboard\" component={DashboardPage} />\n        <Route path=\"/profile\" component={ProfilePage} />\n        <Route path=\"/allSitePosts\" component={AllSitePostsPage} />\n        <Route path=\"/logout\" component={Home} />\n        <Route path=\"/register\" component={FreeRegistrationPage} />\n        <Route path=\"/admin\" component={AdminPage} />\n      </Router>\n    </div>\n  );\n}\n\n/*\n\n3.1. withRouter\nwithRouter is a function provided in the react-router-dom library that helps us access the history prop in components which are not immediate children to the <Route> components.\nTo import withRouter\nimport { withRouter } from \"react-router-dom\";\nNow to get the history prop inside our component, we need to wrap our component with withRouter while exporting it.\nexport default withRouter(yourComponent);\nWe can now access the history prop same as above to do our required navigations.\n\n*/\n","import {\n  ALL_USERS_FAIL,\n  ALL_USERS_SUCCESS,\n  FILTER_USERS_FAIL,\n  FILTER_USERS_SUCCESS,\n\n\n\n\n\n\n\n\n\n\n  GET_CATEGORIES_FAIL, GET_CATEGORIES_SUCCESS, LOGIN_USER_FAIL,\n  LOGIN_USER_SUCCESS,\n  LOGOUT_USER_SUCCESS,\n  REGISTER_USER_FAIL,\n  REGISTER_USER_SUCCESS,\n  UPDATE_USER_FAIL,\n  UPDATE_USER_SUCCESS,\n  USER_PROFILE_FAIL,\n  USER_PROFILE_SUCCESS\n} from \"../actions/authAction\";\n\nconst initialState = {\n  authorized: false,\n  haveUsers: false,\n  loginResult:{},\n  loginSuccess: false,\n  users: [],\n  user: {},\n  haveUser: false,\n  categories:[],\n  haveCategories: false,\n  errors: {},\n  usstates :['Select State','Alabama','Alaska','American Samoa','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','District of Columbia','Federated States of Micronesia','Florida','Georgia','Guam','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Marshall Islands','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Northern Mariana Islands','Ohio','Oklahoma','Oregon','Palau','Pennsylvania','Puerto Rico','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virgin Island','Virginia','Washington','West Virginia','Wisconsin','Wyoming']\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case REGISTER_USER_SUCCESS:\n      return {\n        ...state,\n        users: action.payload,\n        authorized: true,\n      };\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        loginResult: action.payload,\n        loginSuccess: true,\n        authorized: true,\n      };\n    case LOGOUT_USER_SUCCESS:\n      return {\n        ...state,\n        authorized: false,\n        user:{},\n        haveUsers:false,\n        users: [],\n        haveUser: false, \n        loginResult: {},\n        loginSuccess:false\n      };\n    case ALL_USERS_SUCCESS:\n      return {\n        ...state,\n        users: action.payload,\n        haveUsers: true,\n      };\n    case ALL_USERS_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    case USER_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        haveUser: true,\n        authorized: true,\n      };\n    case LOGIN_USER_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    case REGISTER_USER_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n\n    case USER_PROFILE_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n\n    case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case UPDATE_USER_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    case FILTER_USERS_SUCCESS:\n      return {\n        ...state,\n        users: action.payload,\n        haveUsers: true,\n      };\n    case FILTER_USERS_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n      case GET_CATEGORIES_SUCCESS:\n        return {\n          ...state,\n          categories: action.payload,\n          haveCategories: true,\n        };\n      case GET_CATEGORIES_FAIL:\n        return {\n          ...state,\n          errors: true,\n        };\n    default:\n      break;\n  }\n  return state;\n}\n","import {\n  ACCEPT_POST_FAIL,\n  ACCEPT_POST_SUCCESS,\n  ALL_SITE_POSTS_FAIL,\n  ALL_SITE_POSTS_SUCCESS,\n  ALL_USER_POSTS_FAIL,\n  ALL_USER_POSTS_SUCCESS,\n  CANCEL_POST_FAIL,\n  CANCEL_POST_SUCCESS,\n  CLEAR_POST_FAIL,\n  CLEAR_POST_SUCCESS,\n  CREATE_POST_FAIL,\n  CREATE_POST_SUCCESS,\n  DELETE_POST_FAIL,\n  DELETE_POST_SUCCESS,\n  FILTER_OWNERS_POSTS_FAIL,\n  FILTER_OWNERS_POSTS_SUCCESS,\n  FILTER_POSTS_FAIL,\n  FILTER_POSTS_SUCCESS,\n  GET_STATUS_COLOR,\n  INIT_POST_FAIL,\n  INIT_POST_SUCCESS,\n\n\n\n  PROXIMITY_POSTS_FAIL, PROXIMITY_POSTS_SUCCESS, SET_STATUS_BLUE,\n  SET_STATUS_GREEN,\n\n\n\n\n\n  UPDATE_CREATING_POST_FAIL, UPDATE_CREATING_POST_SUCCESS, UPDATE_POST_FAIL,\n  UPDATE_POST_SUCCESS\n} from \"../actions/postAction\";\n\nconst initialState = {\n  havePosts: false,\n  posts: [],\n  post: {},\n  usersPosts: [],\n  haveUsersPosts: false,\n  errors: {},\n  statusColor: \"undefined\",\n  postStepZero: false,\n  postStepOne: false,\n  postStepTwo: false,\n  postStepThree: false,\n  postStepsAvailable: true,\n  postType: [\"select type\", \"Looking For Work\", \"Hiring\", \"Open For Business\"],\n  categories: [\n    \"select category\",\n    \"construction\",\n    \"remodeling\",\n    \"plumbing\",\n    \"painting\",\n    \"carpentry\",\n    \"siding\",\n    \"drywall\",\n    \"concrete\",\n    \"frameing\",\n    \"cabinetry\",\n    \"tile\",\n    \"decks\",\n    \"excavating\",\n    \"appliances\",\n    \"landscaping\",\n    \"excavating\",\n    \"general contracting\",\n    \"subcontracting\",\n    \"cleaning\",\n    \"electrical\",\n    \"other\"\n  ],\n};\n//!!!!: The order of there 'categories' is important !!! And I just changed it !!!\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ALL_USER_POSTS_SUCCESS:\n      return {\n        ...state,\n        usersPosts: action.payload,\n        haveUsersPosts: true,\n      };\n    case ALL_USER_POSTS_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    case ALL_SITE_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        havePosts: true,\n      };\n    case ALL_SITE_POSTS_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    case CREATE_POST_SUCCESS:\n      return {\n        ...state,\n        post: action.payload,\n        postStepOne: true,\n        statusColor: \"BLUE\",\n      };\n    case CREATE_POST_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    case UPDATE_POST_SUCCESS:\n      return {\n        ...state,\n        post: action.payload,\n        statusColor: \"BLUE\",\n      };//problem: UPDATE_POST_SUCCESS is getting used in two different cases. Creating, and Editing...should only get set to TRUE during creation.\n    case UPDATE_POST_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n\n\n      case UPDATE_CREATING_POST_SUCCESS:\n        return {\n          ...state,\n          post: action.payload,\n          statusColor: \"BLUE\",\n          postStepTwo: true,\n        };//problem: UPDATE_POST_SUCCESS is getting used in two different cases. Creating, and Editing...should only get set to TRUE during creation.\n      case UPDATE_CREATING_POST_FAIL:\n        return {\n          ...state,\n          errors: true,\n        };\n\n\n    case FILTER_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        havePosts: true,\n      };\n    case FILTER_POSTS_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    case FILTER_OWNERS_POSTS_SUCCESS:\n      return {\n        ...state,\n        usersPosts: action.payload,\n        haveUsersPosts: true,\n      };\n    case FILTER_OWNERS_POSTS_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    case DELETE_POST_SUCCESS:\n      return {\n        ...state,\n        post: action.payload,\n        statusColor: \"RED\",\n      };\n    case DELETE_POST_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n\n    case ACCEPT_POST_SUCCESS:\n      return {\n        ...state,\n        post: action.payload,\n        statusColor: \"GREEN\",\n        postStepZero: false,\n        postStepOne: false,\n        postStepTwo: false,\n        postStepThree: false,\n        postStepsAvailable: true\n      };\n    case ACCEPT_POST_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n\n    case CANCEL_POST_SUCCESS:\n      return {\n        ...state,\n        post: action.payload,\n        statusColor: \"GREEN\",\n        postStepZero: false,\n        postStepOne: false,\n        postStepTwo: false,\n        postStepThree: false,\n        postStepsAvailable: true\n\n      };\n    case CANCEL_POST_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n\n    case INIT_POST_SUCCESS:\n      return {\n        ...state,\n        // post: action.payload, why? it should not overwrite the post data.\n        statusColor: \"GREEN\",\n        postStepZero: true,\n        postStepsAvailable: false\n      };\n    case INIT_POST_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n\n    case CLEAR_POST_SUCCESS:\n      return {\n        ...state,\n\n        statusColor: \"GREEN\",\n        postStepZero: false,\n        postStepOne: false,\n        postStepTwo: false,\n        postStepThree: false,\n        postStepsAvailable: true\n      };\n    case CLEAR_POST_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    //====STATUS: GREEN = editable, BLUE = being edited.\n    //used to refresh data after a record is created or edited.\n    case SET_STATUS_BLUE:\n      return {\n        ...state,\n        statusColor: \"BLUE\",\n      };\n    case SET_STATUS_GREEN:\n      return {\n        ...state,\n        statusColor: \"GREEN\",\n      };\n    case GET_STATUS_COLOR:\n      return {\n        ...state,\n      };\n    //=====================\n\n    case PROXIMITY_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        havePosts: true,\n      };\n    case PROXIMITY_POSTS_FAIL:\n      return {\n        ...state,\n        errors: true,\n      };\n    default:\n      break;\n  }\n  return state;\n}\n","export const SET_STATUS_GREEN = \"SET_STATUS_GREEN\"\nexport const SET_STATUS_BLUE = \"SET_STATUS_BLUE\"\nexport const GET_STATUS_COLOR = \"GET_STATUS_COLOR\"\n\n\nexport const setStatusGreen = () => {\n    return async (dispatch) => {\n      dispatch({\n          type: SET_STATUS_GREEN,\n          })\n    }\n  }\n  export const setStatusBlue = () => {\n    return async (dispatch) => {\n      dispatch({\n          type: SET_STATUS_BLUE,\n          })\n    }\n  }\n export const getStatusColor = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: GET_STATUS_COLOR,\n        })\n    }\n }\n ","import { GET_STATUS_COLOR, SET_STATUS_BLUE, SET_STATUS_GREEN } from \"../actions/statusAction\";\n\nconst initialState = {\n    statusColor:'undefined'\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n     \n    case SET_STATUS_BLUE: \n      return {\n        ...state, \n        statusColor:'BLUE'\n      }\n    case SET_STATUS_GREEN: \n      return {\n        ...state, \n        statusColor:'GREEN'\n      }\n    case GET_STATUS_COLOR: \n      return {\n        ...state,\n      }\n    \n  }\n  return state;\n}\n ","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport authReducer from './reducers/authReducer';\nimport postReducer from './reducers/postReducer';\nimport statusReducer from './reducers/statusReducer';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,   status: statusReducer, post: postReducer\n})\n\nconst middleware = composeWithDevTools(applyMiddleware(thunk))\n\nexport default createStore(rootReducer,middleware) "," \nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"./App.css\";\n// import StatusChecker from \"./app/components/StatusChecker\";\nimport AppFooter from \"./app/components/AppFooter\";\nimport NavigationMenu from \"./app/NavigationMenu\";\nimport store from \"./redux/store\";\n\nfunction App(props) {\n\n  console.log('Environment:',process.env.NODE_ENV)\n  return (\n    <Provider store={store}>\n        <div className=\"App component-full-background-image\">\n          <React.Fragment>\n            <CssBaseline />\n            <Container maxWidth=\"lg\">\n               <NavigationMenu props={props}></NavigationMenu>\n            </Container>\n          </React.Fragment>\n           {/* <StatusChecker></StatusChecker> */}\n           <AppFooter></AppFooter>\n        </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}